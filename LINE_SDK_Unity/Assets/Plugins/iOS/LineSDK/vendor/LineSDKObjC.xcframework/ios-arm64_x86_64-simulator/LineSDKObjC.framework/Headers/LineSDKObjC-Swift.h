#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef LINESDKOBJC_SWIFT_H
#define LINESDKOBJC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Dispatch;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LineSDKObjC",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


@class LineSDKUserProfile;
@class LineSDKCallbackQueue;
@class NSString;
@class LineSDKGetFriendsResponse;
enum LineSDKGetFriendsRequestSort : NSInteger;
@class LineSDKGetApproversInFriendsResponse;
@class LineSDKGetGroupsResponse;
@class LineSDKGetApproversInGroupResponse;
@class LineSDKMessage;
@class LineSDKPostSendMessagesResponse;
@class LineSDKPostMultisendMessagesResponse;
@class LineSDKGetBotFriendshipStatusResponse;
@class LineSDKMessageSendingToken;
@class LineSDKOpenChatRoomStatus;
@class LineSDKOpenChatRoomMembershipState;
@class LineSDKOpenChatRoomJoinType;

SWIFT_CLASS("_TtC11LineSDKObjC10LineSDKAPI")
@interface LineSDKAPI : NSObject
+ (void)getProfileWithCompletionHandler:(void (^ _Nonnull)(LineSDKUserProfile * _Nullable, NSError * _Nullable))completion;
+ (void)getProfileWithCallbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKUserProfile * _Nullable, NSError * _Nullable))completion;
+ (void)getFriendsWithPageToken:(NSString * _Nullable)pageToken completionHandler:(void (^ _Nonnull)(LineSDKGetFriendsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getFriendsWithSort:(enum LineSDKGetFriendsRequestSort)sort pageToken:(NSString * _Nullable)pageToken completionHandler:(void (^ _Nonnull)(LineSDKGetFriendsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getFriendsWithSort:(enum LineSDKGetFriendsRequestSort)sort pageToken:(NSString * _Nullable)pageToken callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKGetFriendsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getApproversInFriendsWithPageToken:(NSString * _Nullable)pageToken completionHandler:(void (^ _Nonnull)(LineSDKGetApproversInFriendsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getApproversInFriendsWithPageToken:(NSString * _Nullable)pageToken callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKGetApproversInFriendsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getGroupsWithPageToken:(NSString * _Nullable)pageToken completionHandler:(void (^ _Nonnull)(LineSDKGetGroupsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getGroupsWithPageToken:(NSString * _Nullable)pageToken callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKGetGroupsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getApproversInGroupWithGroupID:(NSString * _Nonnull)groupID pageToken:(NSString * _Nullable)pageToken completionHandler:(void (^ _Nonnull)(LineSDKGetApproversInGroupResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getApproversInGroupWithGroupID:(NSString * _Nonnull)groupID pageToken:(NSString * _Nullable)pageToken callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKGetApproversInGroupResponse * _Nullable, NSError * _Nullable))completion;
+ (void)sendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages to:(NSString * _Nonnull)chatID completionHandler:(void (^ _Nonnull)(LineSDKPostSendMessagesResponse * _Nullable, NSError * _Nullable))completion;
+ (void)sendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages to:(NSString * _Nonnull)chatID callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKPostSendMessagesResponse * _Nullable, NSError * _Nullable))completion;
+ (void)multiSendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages to:(NSArray<NSString *> * _Nonnull)userIDs completionHandler:(void (^ _Nonnull)(LineSDKPostMultisendMessagesResponse * _Nullable, NSError * _Nullable))completion;
+ (void)multiSendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages to:(NSArray<NSString *> * _Nonnull)userIDs callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKPostMultisendMessagesResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getBotFriendshipStatusWithCompletionHandler:(void (^ _Nonnull)(LineSDKGetBotFriendshipStatusResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getBotFriendshipStatusWithCallbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKGetBotFriendshipStatusResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getMessageSendingOneTimeTokenWithUserIDs:(NSArray<NSString *> * _Nonnull)userIDs completionHander:(void (^ _Nonnull)(LineSDKMessageSendingToken * _Nullable, NSError * _Nullable))completion;
+ (void)getMessageSendingOneTimeTokenWithUserIDs:(NSArray<NSString *> * _Nonnull)userIDs callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHander:(void (^ _Nonnull)(LineSDKMessageSendingToken * _Nullable, NSError * _Nullable))completion;
+ (void)multiSendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages withMessageToken:(LineSDKMessageSendingToken * _Nonnull)token completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)multiSendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages withMessageToken:(LineSDKMessageSendingToken * _Nonnull)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)getOpenChatRoomStatusWithOpenChatId:(NSString * _Nonnull)openChatId completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomStatus * _Nullable, NSError * _Nullable))completion;
+ (void)getOpenChatRoomStatusWithOpenChatId:(NSString * _Nonnull)openChatId callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomStatus * _Nullable, NSError * _Nullable))completion;
+ (void)getOpenChatRoomMembershipStateWithOpenChatId:(NSString * _Nonnull)openChatId completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomMembershipState * _Nullable, NSError * _Nullable))completion;
+ (void)getOpenChatRoomMembershipStateWithOpenChatId:(NSString * _Nonnull)openChatId callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomMembershipState * _Nullable, NSError * _Nullable))completion;
+ (void)getOpenChatRoomJoinTypeWithOpenChatId:(NSString * _Nonnull)openChatId completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomJoinType * _Nullable, NSError * _Nullable))completion;
+ (void)getOpenChatRoomJoinTypeWithOpenChatId:(NSString * _Nonnull)openChatId callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomJoinType * _Nullable, NSError * _Nullable))completion;
+ (void)postOpenChatRoomJoinWithOpenChatId:(NSString * _Nonnull)openChatId displayName:(NSString * _Nonnull)displayName completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)postOpenChatRoomJoinWithOpenChatId:(NSString * _Nonnull)openChatId displayName:(NSString * _Nonnull)displayName callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LineSDKAccessToken;
@class LineSDKAccessTokenVerifyResult;

@interface LineSDKAPI (SWIFT_EXTENSION(LineSDKObjC))
+ (void)refreshAccessTokenWithCompletionHandler:(void (^ _Nonnull)(LineSDKAccessToken * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.refreshAccessToken");
+ (void)refreshAccessTokenWithCallbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKAccessToken * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.refreshAccessToken");
+ (void)revokeAccessTokenWithCompletionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.revokeAccessToken");
+ (void)revokeAccessToken:(NSString * _Nullable)token completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.revokeAccessToken");
+ (void)revokeAccessToken:(NSString * _Nullable)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.revokeAccessToken");
+ (void)verifyAccessTokenWithCompletionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.verifyAccessToken");
+ (void)verifyAccessToken:(NSString * _Nullable)token completionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.verifyAccessToken");
+ (void)verifyAccessToken:(NSString * _Nullable)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.verifyAccessToken");
@end


SWIFT_CLASS("_TtC11LineSDKObjC15LineSDKAPIError")
@interface LineSDKAPIError : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull error;
@property (nonatomic, readonly, copy) NSString * _Nullable detail;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSDate;
@class LineSDKJWT;
@class LineSDKLoginPermission;

SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKAccessToken")
@interface LineSDKAccessToken : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, strong) LineSDKJWT * _Nullable IDToken;
@property (nonatomic, readonly, copy) NSString * _Nullable IDTokenRaw;
@property (nonatomic, readonly, copy) NSArray<LineSDKLoginPermission *> * _Nonnull permissions;
@property (nonatomic, readonly, copy) NSDate * _Nonnull expiresAt;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC23LineSDKAccessTokenStore")
@interface LineSDKAccessTokenStore : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKAccessTokenStore * _Nonnull sharedStore;)
+ (LineSDKAccessTokenStore * _Nonnull)sharedStore SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) LineSDKAccessToken * _Nullable currentToken;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC30LineSDKAccessTokenVerifyResult")
@interface LineSDKAccessTokenVerifyResult : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull channelID;
@property (nonatomic, readonly, copy) NSArray<LineSDKLoginPermission *> * _Nonnull permissions;
@property (nonatomic, readonly) NSTimeInterval expiresIn;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKTextMessage;
@class LineSDKImageMessage;
@class LineSDKVideoMessage;
@class LineSDKAudioMessage;
@class LineSDKLocationMessage;
@class LineSDKTemplateMessage;
@class LineSDKFlexMessage;

SWIFT_CLASS("_TtC11LineSDKObjC14LineSDKMessage")
@interface LineSDKMessage : NSObject
@property (nonatomic, readonly, strong) LineSDKTextMessage * _Nullable textMessage;
@property (nonatomic, readonly, strong) LineSDKImageMessage * _Nullable imageMessage;
@property (nonatomic, readonly, strong) LineSDKVideoMessage * _Nullable videoMessage;
@property (nonatomic, readonly, strong) LineSDKAudioMessage * _Nullable audioMessage;
@property (nonatomic, readonly, strong) LineSDKLocationMessage * _Nullable locationMessage;
@property (nonatomic, readonly, strong) LineSDKTemplateMessage * _Nullable templateMessage;
@property (nonatomic, readonly, strong) LineSDKFlexMessage * _Nullable flexMessage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;

SWIFT_CLASS("_TtC11LineSDKObjC19LineSDKAudioMessage")
@interface LineSDKAudioMessage : LineSDKMessage
@property (nonatomic, readonly, copy) NSURL * _Nonnull originalContentURL;
@property (nonatomic, readonly) NSTimeInterval duration;
- (nullable instancetype)initWithOriginalContentURL:(NSURL * _Nonnull)originalContentURL duration:(NSTimeInterval)duration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC14LineSDKAuthAPI")
@interface LineSDKAuthAPI : NSObject
+ (void)refreshAccessTokenWithCompletionHandler:(void (^ _Nonnull)(LineSDKAccessToken * _Nullable, NSError * _Nullable))completion;
+ (void)refreshAccessTokenWithCallbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKAccessToken * _Nullable, NSError * _Nullable))completion;
+ (void)revokeAccessTokenWithCompletionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)revokeAccessToken:(NSString * _Nullable)token completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)revokeAccessToken:(NSString * _Nullable)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)revokeRefreshTokenWithCompletionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)revokeRefreshToken:(NSString * _Nullable)token completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)revokeRefreshToken:(NSString * _Nullable)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)verifyAccessTokenWithCompletionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion;
+ (void)verifyAccessToken:(NSString * _Nullable)token completionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion;
+ (void)verifyAccessToken:(NSString * _Nullable)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKAuthorizationStatus")
@interface LineSDKAuthorizationStatus : NSObject
@property (nonatomic, readonly) NSInteger rawValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKAuthorizationStatus * _Nonnull authorized;)
+ (LineSDKAuthorizationStatus * _Nonnull)authorized SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKAuthorizationStatus * _Nonnull lackOfToken;)
+ (LineSDKAuthorizationStatus * _Nonnull)lackOfToken SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKAuthorizationStatus * _Nonnull lackOfPermissions;)
+ (LineSDKAuthorizationStatus * _Nonnull)lackOfPermissions SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithRawValue:(NSInteger)rawValue OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSOperationQueue;

SWIFT_CLASS("_TtC11LineSDKObjC20LineSDKCallbackQueue")
@interface LineSDKCallbackQueue : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKCallbackQueue * _Nonnull asyncMain;)
+ (LineSDKCallbackQueue * _Nonnull)asyncMain SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKCallbackQueue * _Nonnull currentMainOrAsync;)
+ (LineSDKCallbackQueue * _Nonnull)currentMainOrAsync SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKCallbackQueue * _Nonnull untouch;)
+ (LineSDKCallbackQueue * _Nonnull)untouch SWIFT_WARN_UNUSED_RESULT;
+ (LineSDKCallbackQueue * _Nonnull)callbackQueueWithDispatchQueue:(dispatch_queue_t _Nonnull)dispatchQueue SWIFT_WARN_UNUSED_RESULT;
+ (LineSDKCallbackQueue * _Nonnull)callbackQueueWithOperationQueue:(NSOperationQueue * _Nonnull)operationQueue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC15LineSDKConstant")
@interface LineSDKConstant : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull SDKVersion;)
+ (NSString * _Nonnull)SDKVersion SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LineSDKObjC20LineSDKErrorConstant")
@interface LineSDKErrorConstant : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull errorDomain;)
+ (NSString * _Nonnull)errorDomain SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull cryptoErrorDomain;)
+ (NSString * _Nonnull)cryptoErrorDomain SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyUnderlyingError;)
+ (NSString * _Nonnull)userInfoKeyUnderlyingError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyStatusCode;)
+ (NSString * _Nonnull)userInfoKeyStatusCode SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyResultCode;)
+ (NSString * _Nonnull)userInfoKeyResultCode SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyType;)
+ (NSString * _Nonnull)userInfoKeyType SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyData;)
+ (NSString * _Nonnull)userInfoKeyData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyAPIError;)
+ (NSString * _Nonnull)userInfoKeyAPIError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyRaw;)
+ (NSString * _Nonnull)userInfoKeyRaw SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyUrl;)
+ (NSString * _Nonnull)userInfoKeyUrl SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyMessage;)
+ (NSString * _Nonnull)userInfoKeyMessage SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyStatus;)
+ (NSString * _Nonnull)userInfoKeyStatus SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyText;)
+ (NSString * _Nonnull)userInfoKeyText SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyEncoding;)
+ (NSString * _Nonnull)userInfoKeyEncoding SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyParameterName;)
+ (NSString * _Nonnull)userInfoKeyParameterName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyReason;)
+ (NSString * _Nonnull)userInfoKeyReason SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyIndex;)
+ (NSString * _Nonnull)userInfoKeyIndex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyKey;)
+ (NSString * _Nonnull)userInfoKeyKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyGot;)
+ (NSString * _Nonnull)userInfoKeyGot SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LineSDKHexColor;

SWIFT_CLASS("_TtC11LineSDKObjC21LineSDKFlexBlockStyle")
@interface LineSDKFlexBlockStyle : NSObject
@property (nonatomic, strong) LineSDKHexColor * _Nullable backgroundColor;
@property (nonatomic) BOOL separator;
@property (nonatomic, strong) LineSDKHexColor * _Nullable separatorColor;
- (nonnull instancetype)initWithBackgroundColor:(LineSDKHexColor * _Nullable)backgroundColor separator:(BOOL)separator separatorColor:(LineSDKHexColor * _Nullable)separatorColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKFlexBoxComponent;
@class LineSDKFlexTextComponent;
@class LineSDKFlexButtonComponent;
@class LineSDKFlexImageComponent;
@class LineSDKFlexFillerComponent;
@class LineSDKFlexIconComponent;
@class LineSDKFlexSeparatorComponent;
@class LineSDKFlexSpacerComponent;

SWIFT_CLASS("_TtC11LineSDKObjC27LineSDKFlexMessageComponent")
@interface LineSDKFlexMessageComponent : NSObject
@property (nonatomic, readonly, strong) LineSDKFlexBoxComponent * _Nullable boxComponent;
@property (nonatomic, readonly, strong) LineSDKFlexTextComponent * _Nullable textComponent;
@property (nonatomic, readonly, strong) LineSDKFlexButtonComponent * _Nullable buttonComponent;
@property (nonatomic, readonly, strong) LineSDKFlexImageComponent * _Nullable imageComponent;
@property (nonatomic, readonly, strong) LineSDKFlexFillerComponent * _Nullable fillerComponent;
@property (nonatomic, readonly, strong) LineSDKFlexIconComponent * _Nullable iconComponent;
@property (nonatomic, readonly, strong) LineSDKFlexSeparatorComponent * _Nullable separatorComponent;
@property (nonatomic, readonly, strong) LineSDKFlexSpacerComponent * _Nullable spacerComponent;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LineSDKFlexMessageComponentLayout : NSInteger;
@class NSNumber;
enum LineSDKFlexMessageComponentSpacing : NSInteger;
enum LineSDKFlexMessageComponentMargin : NSInteger;
@class LineSDKMessageAction;

SWIFT_CLASS("_TtC11LineSDKObjC23LineSDKFlexBoxComponent")
@interface LineSDKFlexBoxComponent : LineSDKFlexMessageComponent
@property (nonatomic, readonly) enum LineSDKFlexMessageComponentLayout layout;
@property (nonatomic, copy) NSArray<LineSDKFlexMessageComponent *> * _Nonnull contents;
@property (nonatomic, strong) NSNumber * _Nullable flex;
@property (nonatomic) enum LineSDKFlexMessageComponentSpacing spacing;
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic, strong) LineSDKMessageAction * _Nullable action;
- (nonnull instancetype)initWithLayout:(enum LineSDKFlexMessageComponentLayout)layout contents:(NSArray<LineSDKFlexMessageComponent *> * _Nonnull)contents OBJC_DESIGNATED_INITIALIZER;
- (void)addComponent:(LineSDKFlexMessageComponent * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKFlexBubbleContainer;
@class LineSDKFlexCarouselContainer;

SWIFT_CLASS("_TtC11LineSDKObjC27LineSDKFlexMessageContainer")
@interface LineSDKFlexMessageContainer : NSObject
@property (nonatomic, readonly, strong) LineSDKFlexBubbleContainer * _Nullable bubbleContainer;
@property (nonatomic, readonly, strong) LineSDKFlexCarouselContainer * _Nullable carouselContainer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LineSDKFlexBubbleContainerStyle;
enum LineSDKFlexBubbleContainerDirection : NSInteger;

SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKFlexBubbleContainer")
@interface LineSDKFlexBubbleContainer : LineSDKFlexMessageContainer
@property (nonatomic, strong) LineSDKFlexBoxComponent * _Nullable header;
@property (nonatomic, strong) LineSDKFlexImageComponent * _Nullable hero;
@property (nonatomic, strong) LineSDKFlexBoxComponent * _Nullable body;
@property (nonatomic, strong) LineSDKFlexBoxComponent * _Nullable footer;
@property (nonatomic, strong) LineSDKFlexBubbleContainerStyle * _Nullable style;
@property (nonatomic) enum LineSDKFlexBubbleContainerDirection direction;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LineSDKFlexBubbleContainerDirection, open) {
  LineSDKFlexBubbleContainerDirectionNone = 0,
  LineSDKFlexBubbleContainerDirectionLeftToRight = 1,
  LineSDKFlexBubbleContainerDirectionRightToLeft = 2,
};


SWIFT_CLASS("_TtC11LineSDKObjC31LineSDKFlexBubbleContainerStyle")
@interface LineSDKFlexBubbleContainerStyle : NSObject
@property (nonatomic, strong) LineSDKFlexBlockStyle * _Nullable header;
@property (nonatomic, strong) LineSDKFlexBlockStyle * _Nullable hero;
@property (nonatomic, strong) LineSDKFlexBlockStyle * _Nullable body;
@property (nonatomic, strong) LineSDKFlexBlockStyle * _Nullable footer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LineSDKFlexMessageComponentHeight : NSInteger;
enum LineSDKFlexButtonComponentStyle : NSInteger;
enum LineSDKFlexMessageComponentGravity : NSInteger;

SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKFlexButtonComponent")
@interface LineSDKFlexButtonComponent : LineSDKFlexMessageComponent
@property (nonatomic, strong) LineSDKMessageAction * _Nonnull action;
@property (nonatomic, strong) NSNumber * _Nullable flex;
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic) enum LineSDKFlexMessageComponentHeight height;
@property (nonatomic) enum LineSDKFlexButtonComponentStyle style;
@property (nonatomic, strong) LineSDKHexColor * _Nullable color;
@property (nonatomic) enum LineSDKFlexMessageComponentGravity gravity;
- (nonnull instancetype)initWithAction:(LineSDKMessageAction * _Nonnull)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LineSDKFlexButtonComponentStyle, open) {
  LineSDKFlexButtonComponentStyleNone = 0,
  LineSDKFlexButtonComponentStyleLink = 1,
  LineSDKFlexButtonComponentStylePrimary = 2,
  LineSDKFlexButtonComponentStyleSecondary = 3,
};


SWIFT_CLASS("_TtC11LineSDKObjC28LineSDKFlexCarouselContainer")
@interface LineSDKFlexCarouselContainer : LineSDKFlexMessageContainer
@property (nonatomic, copy) NSArray<LineSDKFlexBubbleContainer *> * _Nonnull contents;
- (nonnull instancetype)initWithContents:(NSArray<LineSDKFlexBubbleContainer *> * _Nonnull)contents OBJC_DESIGNATED_INITIALIZER;
- (void)addBubble:(LineSDKFlexBubbleContainer * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKFlexFillerComponent")
@interface LineSDKFlexFillerComponent : LineSDKFlexMessageComponent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LineSDKFlexMessageComponentSize : NSInteger;
enum LineSDKFlexMessageComponentAspectRatio : NSInteger;

SWIFT_CLASS("_TtC11LineSDKObjC24LineSDKFlexIconComponent")
@interface LineSDKFlexIconComponent : LineSDKFlexMessageComponent
@property (nonatomic, readonly, copy) NSURL * _Nonnull url;
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic) enum LineSDKFlexMessageComponentSize size;
@property (nonatomic) enum LineSDKFlexMessageComponentAspectRatio aspectRatio;
- (nullable instancetype)initWithIconURL:(NSURL * _Nonnull)iconURL OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum LineSDKFlexMessageComponentAlignment : NSInteger;
enum LineSDKFlexMessageComponentAspectMode : NSInteger;

SWIFT_CLASS("_TtC11LineSDKObjC25LineSDKFlexImageComponent")
@interface LineSDKFlexImageComponent : LineSDKFlexMessageComponent
@property (nonatomic, readonly, copy) NSURL * _Nonnull url;
@property (nonatomic, strong) NSNumber * _Nullable flex;
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic) enum LineSDKFlexMessageComponentAlignment alignment;
@property (nonatomic) enum LineSDKFlexMessageComponentGravity gravity;
@property (nonatomic) enum LineSDKFlexMessageComponentSize size;
@property (nonatomic) enum LineSDKFlexMessageComponentAspectRatio aspectRatio;
@property (nonatomic) enum LineSDKFlexMessageComponentAspectMode aspectMode;
@property (nonatomic, strong) LineSDKHexColor * _Nullable backgroundColor;
- (nullable instancetype)initWithImageURL:(NSURL * _Nonnull)imageURL OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKFlexMessage")
@interface LineSDKFlexMessage : LineSDKMessage
@property (nonatomic, copy) NSString * _Nonnull altText;
@property (nonatomic, strong) LineSDKFlexMessageContainer * _Nonnull contents;
- (nonnull instancetype)initWithAltText:(NSString * _Nonnull)altText container:(LineSDKFlexMessageContainer * _Nonnull)container OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentAlignment, open) {
  LineSDKFlexMessageComponentAlignmentNone = 0,
  LineSDKFlexMessageComponentAlignmentStart = 1,
  LineSDKFlexMessageComponentAlignmentEnd = 2,
  LineSDKFlexMessageComponentAlignmentCenter = 3,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentAspectMode, open) {
  LineSDKFlexMessageComponentAspectModeNone = 0,
  LineSDKFlexMessageComponentAspectModeFill = 1,
  LineSDKFlexMessageComponentAspectModeFit = 2,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentAspectRatio, open) {
  LineSDKFlexMessageComponentAspectRatioNone = 0,
  LineSDKFlexMessageComponentAspectRatioRatio_1x1 = 1,
  LineSDKFlexMessageComponentAspectRatioRatio_1_51x1 = 2,
  LineSDKFlexMessageComponentAspectRatioRatio_1_91x1 = 3,
  LineSDKFlexMessageComponentAspectRatioRatio_4x3 = 4,
  LineSDKFlexMessageComponentAspectRatioRatio_16x9 = 5,
  LineSDKFlexMessageComponentAspectRatioRatio_20x13 = 6,
  LineSDKFlexMessageComponentAspectRatioRatio_2x1 = 7,
  LineSDKFlexMessageComponentAspectRatioRatio_3x1 = 8,
  LineSDKFlexMessageComponentAspectRatioRatio_3x4 = 9,
  LineSDKFlexMessageComponentAspectRatioRatio_9x16 = 10,
  LineSDKFlexMessageComponentAspectRatioRatio_1x2 = 11,
  LineSDKFlexMessageComponentAspectRatioRatio_1x3 = 12,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentGravity, open) {
  LineSDKFlexMessageComponentGravityNone = 0,
  LineSDKFlexMessageComponentGravityTop = 1,
  LineSDKFlexMessageComponentGravityBottom = 2,
  LineSDKFlexMessageComponentGravityCenter = 3,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentHeight, open) {
  LineSDKFlexMessageComponentHeightNone = 0,
  LineSDKFlexMessageComponentHeightSm = 1,
  LineSDKFlexMessageComponentHeightMd = 2,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentLayout, open) {
  LineSDKFlexMessageComponentLayoutHorizontal = 0,
  LineSDKFlexMessageComponentLayoutVertical = 1,
  LineSDKFlexMessageComponentLayoutBaseline = 2,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentMargin, open) {
  LineSDKFlexMessageComponentMarginNone = 0,
  LineSDKFlexMessageComponentMarginXs = 1,
  LineSDKFlexMessageComponentMarginSm = 2,
  LineSDKFlexMessageComponentMarginMd = 3,
  LineSDKFlexMessageComponentMarginLg = 4,
  LineSDKFlexMessageComponentMarginXl = 5,
  LineSDKFlexMessageComponentMarginXxl = 6,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentSize, open) {
  LineSDKFlexMessageComponentSizeNone = 0,
  LineSDKFlexMessageComponentSizeXxs = 1,
  LineSDKFlexMessageComponentSizeXs = 2,
  LineSDKFlexMessageComponentSizeSm = 3,
  LineSDKFlexMessageComponentSizeMd = 4,
  LineSDKFlexMessageComponentSizeLg = 5,
  LineSDKFlexMessageComponentSizeXl = 6,
  LineSDKFlexMessageComponentSizeXxl = 7,
  LineSDKFlexMessageComponentSizeXl3 = 8,
  LineSDKFlexMessageComponentSizeXl4 = 9,
  LineSDKFlexMessageComponentSizeXl5 = 10,
  LineSDKFlexMessageComponentSizeFull = 11,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentSpacing, open) {
  LineSDKFlexMessageComponentSpacingNone = 0,
  LineSDKFlexMessageComponentSpacingXs = 1,
  LineSDKFlexMessageComponentSpacingSm = 2,
  LineSDKFlexMessageComponentSpacingMd = 3,
  LineSDKFlexMessageComponentSpacingLg = 4,
  LineSDKFlexMessageComponentSpacingXl = 5,
  LineSDKFlexMessageComponentSpacingXxl = 6,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentWeight, open) {
  LineSDKFlexMessageComponentWeightNone = 0,
  LineSDKFlexMessageComponentWeightRegular = 1,
  LineSDKFlexMessageComponentWeightBold = 2,
};



SWIFT_CLASS("_TtC11LineSDKObjC29LineSDKFlexSeparatorComponent")
@interface LineSDKFlexSeparatorComponent : LineSDKFlexMessageComponent
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic, strong) LineSDKHexColor * _Nullable color;
- (nonnull instancetype)initWithMargin:(enum LineSDKFlexMessageComponentMargin)margin color:(LineSDKHexColor * _Nullable)color OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKFlexSpacerComponent")
@interface LineSDKFlexSpacerComponent : LineSDKFlexMessageComponent
@property (nonatomic) enum LineSDKFlexMessageComponentSize size;
- (nonnull instancetype)initWithSize:(enum LineSDKFlexMessageComponentSize)size OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC24LineSDKFlexTextComponent")
@interface LineSDKFlexTextComponent : LineSDKFlexMessageComponent
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, strong) NSNumber * _Nullable flex;
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic) enum LineSDKFlexMessageComponentSize size;
@property (nonatomic) enum LineSDKFlexMessageComponentAlignment alignment;
@property (nonatomic) enum LineSDKFlexMessageComponentGravity gravity;
@property (nonatomic) BOOL wrapping;
@property (nonatomic, strong) NSNumber * _Nullable maxLines;
@property (nonatomic) enum LineSDKFlexMessageComponentWeight weight;
@property (nonatomic, strong) LineSDKHexColor * _Nullable color;
@property (nonatomic, strong) LineSDKMessageAction * _Nullable action;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKUser;

SWIFT_CLASS("_TtC11LineSDKObjC36LineSDKGetApproversInFriendsResponse")
@interface LineSDKGetApproversInFriendsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<LineSDKUser *> * _Nonnull friends;
@property (nonatomic, readonly, copy) NSString * _Nullable pageToken;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC34LineSDKGetApproversInGroupResponse")
@interface LineSDKGetApproversInGroupResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<LineSDKUser *> * _Nonnull users;
@property (nonatomic, readonly, copy) NSString * _Nullable pageToken;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC37LineSDKGetBotFriendshipStatusResponse")
@interface LineSDKGetBotFriendshipStatusResponse : NSObject
@property (nonatomic, readonly) BOOL friendFlag;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LineSDKGetFriendsRequestSort, open) {
  LineSDKGetFriendsRequestSortNone = 0,
  LineSDKGetFriendsRequestSortName = 1,
  LineSDKGetFriendsRequestSortRelation = 2,
};


SWIFT_CLASS("_TtC11LineSDKObjC25LineSDKGetFriendsResponse")
@interface LineSDKGetFriendsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<LineSDKUser *> * _Nonnull friends;
@property (nonatomic, readonly, copy) NSString * _Nullable pageToken;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKGroup;

SWIFT_CLASS("_TtC11LineSDKObjC24LineSDKGetGroupsResponse")
@interface LineSDKGetGroupsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<LineSDKGroup *> * _Nonnull groups;
@property (nonatomic, readonly, copy) NSString * _Nullable pageToken;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC12LineSDKGroup")
@interface LineSDKGroup : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull groupID;
@property (nonatomic, readonly, copy) NSString * _Nonnull groupName;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURL;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURLSmall;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP11LineSDKObjC18LineSDKShareTarget_")
@protocol LineSDKShareTarget
@property (nonatomic, readonly, copy) NSString * _Nonnull targetID;
@property (nonatomic, readonly, copy) NSString * _Nonnull displayName;
@property (nonatomic, readonly, copy) NSURL * _Nullable avatarURL;
@end


@interface LineSDKGroup (SWIFT_EXTENSION(LineSDKObjC)) <LineSDKShareTarget>
@property (nonatomic, readonly, copy) NSString * _Nonnull targetID;
@property (nonatomic, readonly, copy) NSString * _Nonnull displayName;
@property (nonatomic, readonly, copy) NSURL * _Nullable avatarURL;
@end

@class UIColor;

SWIFT_CLASS("_TtC11LineSDKObjC15LineSDKHexColor")
@interface LineSDKHexColor : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull rawValue;
@property (nonatomic, readonly, strong) UIColor * _Nonnull color;
- (nonnull instancetype)init:(UIColor * _Nonnull)color OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRawValue:(NSString * _Nonnull)rawValue defaultColor:(UIColor * _Nonnull)color OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqualsToColor:(LineSDKHexColor * _Nonnull)another SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKMessageSender;

SWIFT_CLASS("_TtC11LineSDKObjC19LineSDKImageMessage")
@interface LineSDKImageMessage : LineSDKMessage
@property (nonatomic, readonly, copy) NSURL * _Nonnull originalContentURL;
@property (nonatomic, readonly, copy) NSURL * _Nonnull previewImageURL;
@property (nonatomic) BOOL animated;
@property (nonatomic, copy) NSString * _Nullable fileExtension;
@property (nonatomic, strong) LineSDKMessageSender * _Nullable sender;
- (nullable instancetype)initWithOriginalContentURL:(NSURL * _Nonnull)originalContentURL previewImageURL:(NSURL * _Nonnull)previewImageURL;
- (nullable instancetype)initWithOriginalContentURL:(NSURL * _Nonnull)originalContentURL previewImageURL:(NSURL * _Nonnull)previewImageURL animated:(BOOL)animated fileExtension:(NSString * _Nullable)fileExtension sender:(LineSDKMessageSender * _Nullable)sender OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKJWTPayload;

SWIFT_CLASS("_TtC11LineSDKObjC10LineSDKJWT")
@interface LineSDKJWT : NSObject
@property (nonatomic, readonly, strong) LineSDKJWTPayload * _Nonnull payload;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC17LineSDKJWTPayload")
@interface LineSDKJWTPayload : NSObject
- (NSString * _Nullable)getStringForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (NSNumber * _Nullable)getNumberForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nullable issuer;
@property (nonatomic, readonly, copy) NSString * _Nullable subject;
@property (nonatomic, readonly, copy) NSString * _Nullable audience;
@property (nonatomic, readonly, copy) NSDate * _Nullable expiration;
@property (nonatomic, readonly, copy) NSDate * _Nullable issueAt;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSURL * _Nullable picture;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable amr;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC22LineSDKLocationMessage")
@interface LineSDKLocationMessage : LineSDKMessage
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull address;
@property (nonatomic) double latitude;
@property (nonatomic) double longitude;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title address:(NSString * _Nonnull)address latitude:(double)latitude longitude:(double)longitude OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIButton;
@protocol LineSDKLoginButtonDelegate;
@class UIViewController;
@class LineSDKLoginManagerParameters;
enum LineSDKLoginButtonSize : NSInteger;
@class LineSDKLoginManagerOptions;

SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKLoginButton")
@interface LineSDKLoginButton : NSObject
@property (nonatomic, readonly, strong) UIButton * _Nonnull button;
@property (nonatomic, weak) id <LineSDKLoginButtonDelegate> _Nullable loginDelegate;
@property (nonatomic, weak) UIViewController * _Nullable buttonPresentingViewController;
@property (nonatomic, copy) NSSet<LineSDKLoginPermission *> * _Nonnull loginPermissions;
@property (nonatomic, strong) LineSDKLoginManagerParameters * _Nonnull loginManagerParameters;
@property (nonatomic) enum LineSDKLoginButtonSize buttonSizeValue;
@property (nonatomic, copy) NSString * _Nullable buttonTextValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)login;
/// warning:
/// Deprecated. Use <code>loginManagerParameters</code> instead.
@property (nonatomic, copy) NSArray<LineSDKLoginManagerOptions *> * _Nullable loginManagerOptions SWIFT_DEPRECATED_MSG("Use `LineSDKLoginButton.loginManagerParameters` instead.");
@end

typedef SWIFT_ENUM(NSInteger, LineSDKLoginButtonSize, open) {
  LineSDKLoginButtonSizeSmall = 0,
  LineSDKLoginButtonSizeNormal = 1,
};

@class LineSDKLoginResult;

SWIFT_PROTOCOL("_TtP11LineSDKObjC26LineSDKLoginButtonDelegate_")
@protocol LineSDKLoginButtonDelegate
- (void)loginButtonDidStartLogin:(LineSDKLoginButton * _Nonnull)button;
- (void)loginButton:(LineSDKLoginButton * _Nonnull)button didSucceedLogin:(LineSDKLoginResult * _Nullable)loginResult;
- (void)loginButton:(LineSDKLoginButton * _Nonnull)button didFailLogin:(NSError * _Nullable)error;
@end

@class LineSDKLoginProcess;
@class UIApplication;

SWIFT_CLASS("_TtC11LineSDKObjC19LineSDKLoginManager")
@interface LineSDKLoginManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManager * _Nonnull sharedManager;)
+ (LineSDKLoginManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) LineSDKLoginProcess * _Nullable currentProcess;
@property (nonatomic, readonly) BOOL isSetupFinished;
@property (nonatomic, readonly) BOOL isAuthorized;
@property (nonatomic, readonly) BOOL isAuthorizing;
@property (nonatomic, copy) NSString * _Nullable preferredWebPageLanguage SWIFT_DEPRECATED_MSG("Set `preferredWebPageLanguage` in `LineSDKLoginManagerParameters` instead.");
- (void)setupWithChannelID:(NSString * _Nonnull)channelID universalLinkURL:(NSURL * _Nullable)universalLinkURL;
- (LineSDKLoginProcess * _Nullable)loginWithPermissions:(NSSet<LineSDKLoginPermission *> * _Nullable)permissions inViewController:(UIViewController * _Nullable)viewController completionHandler:(void (^ _Nonnull)(LineSDKLoginResult * _Nullable, NSError * _Nullable))completion;
- (LineSDKLoginProcess * _Nullable)loginWithPermissions:(NSSet<LineSDKLoginPermission *> * _Nullable)permissions inViewController:(UIViewController * _Nullable)viewController parameters:(LineSDKLoginManagerParameters * _Nonnull)parameters completionHandler:(void (^ _Nonnull)(LineSDKLoginResult * _Nullable, NSError * _Nullable))completion;
- (void)logoutWithCompletionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (BOOL)application:(UIApplication * _Nonnull)app open:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (LineSDKLoginProcess * _Nullable)loginWithPermissions:(NSSet<LineSDKLoginPermission *> * _Nullable)permissions inViewController:(UIViewController * _Nullable)viewController options:(NSArray<LineSDKLoginManagerOptions *> * _Nullable)options completionHandler:(void (^ _Nonnull)(LineSDKLoginResult * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n    Convert the `options` to a `LoginManager.Parameters` value and\n    use `login(permissions:inViewController:parameters:completionHandler:)` instead.\")\n    ");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC28LineSDKLoginManagerBotPrompt")
@interface LineSDKLoginManagerBotPrompt : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManagerBotPrompt * _Nonnull normal;)
+ (LineSDKLoginManagerBotPrompt * _Nonnull)normal SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManagerBotPrompt * _Nonnull aggressive;)
+ (LineSDKLoginManagerBotPrompt * _Nonnull)aggressive SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull rawValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKLoginManagerOptions") SWIFT_DEPRECATED_MSG("Use `LineSDKLoginManagerParameters` instead.")
@interface LineSDKLoginManagerOptions : NSObject
- (nonnull instancetype)initWithRawValue:(NSInteger)rawValue OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManagerOptions * _Nonnull onlyWebLogin;)
+ (LineSDKLoginManagerOptions * _Nonnull)onlyWebLogin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManagerOptions * _Nonnull botPromptNormal;)
+ (LineSDKLoginManagerOptions * _Nonnull)botPromptNormal SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManagerOptions * _Nonnull botPromptAggressive;)
+ (LineSDKLoginManagerOptions * _Nonnull)botPromptAggressive SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC29LineSDKLoginManagerParameters")
@interface LineSDKLoginManagerParameters : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) BOOL onlyWebLogin;
@property (nonatomic, strong) LineSDKLoginManagerBotPrompt * _Nullable botPromptStyle;
@property (nonatomic, copy) NSString * _Nullable promptBotID;
@property (nonatomic, copy) NSString * _Nullable preferredWebPageLanguage;
@property (nonatomic, copy) NSString * _Nullable IDTokenNonce;
@end


SWIFT_CLASS("_TtC11LineSDKObjC22LineSDKLoginPermission")
@interface LineSDKLoginPermission : NSObject
- (nonnull instancetype)initWithRawValue:(NSString * _Nonnull)rawValue OBJC_DESIGNATED_INITIALIZER;
+ (NSSet<LineSDKLoginPermission *> * _Nonnull)permissionsFrom:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openID;)
+ (LineSDKLoginPermission * _Nonnull)openID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull profile;)
+ (LineSDKLoginPermission * _Nonnull)profile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull friends;)
+ (LineSDKLoginPermission * _Nonnull)friends SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull groups;)
+ (LineSDKLoginPermission * _Nonnull)groups SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull oneTimeShare;)
+ (LineSDKLoginPermission * _Nonnull)oneTimeShare SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull messageWrite;)
+ (LineSDKLoginPermission * _Nonnull)messageWrite SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull email;)
+ (LineSDKLoginPermission * _Nonnull)email SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull phone;)
+ (LineSDKLoginPermission * _Nonnull)phone SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull gender;)
+ (LineSDKLoginPermission * _Nonnull)gender SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull birthdate;)
+ (LineSDKLoginPermission * _Nonnull)birthdate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull address;)
+ (LineSDKLoginPermission * _Nonnull)address SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull realName;)
+ (LineSDKLoginPermission * _Nonnull)realName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatTermStatus;)
+ (LineSDKLoginPermission * _Nonnull)openChatTermStatus SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatRoomCreateAndJoin;)
+ (LineSDKLoginPermission * _Nonnull)openChatRoomCreateAndJoin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatInfo;)
+ (LineSDKLoginPermission * _Nonnull)openChatInfo SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatPlugManagement;)
+ (LineSDKLoginPermission * _Nonnull)openChatPlugManagement SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatPlugInfo;)
+ (LineSDKLoginPermission * _Nonnull)openChatPlugInfo SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatPlugProfile;)
+ (LineSDKLoginPermission * _Nonnull)openChatPlugProfile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatPlugSendMessage;)
+ (LineSDKLoginPermission * _Nonnull)openChatPlugSendMessage SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatPlugReceiveMessageEvent;)
+ (LineSDKLoginPermission * _Nonnull)openChatPlugReceiveMessageEvent SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC19LineSDKLoginProcess")
@interface LineSDKLoginProcess : NSObject
- (void)stop;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKLoginResult")
@interface LineSDKLoginResult : NSObject
@property (nonatomic, readonly, strong) LineSDKAccessToken * _Nonnull accessToken;
@property (nonatomic, readonly, copy) NSSet<LineSDKLoginPermission *> * _Nonnull permissions;
@property (nonatomic, readonly, strong) LineSDKUserProfile * _Nullable userProfile;
@property (nonatomic, readonly, strong) NSNumber * _Nullable friendshipStatusChanged;
@property (nonatomic, readonly, copy) NSString * _Nullable IDTokenNonce;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class LineSDKMessageURIAction;

SWIFT_CLASS("_TtC11LineSDKObjC20LineSDKMessageAction")
@interface LineSDKMessageAction : NSObject
@property (nonatomic, readonly, strong) LineSDKMessageURIAction * _Nullable URIAction;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LineSDKObjC20LineSDKMessageSender")
@interface LineSDKMessageSender : NSObject
@property (nonatomic, copy) NSString * _Nonnull label;
@property (nonatomic, copy) NSURL * _Nonnull iconURL;
@property (nonatomic, copy) NSURL * _Nullable linkURL;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label iconURL:(NSURL * _Nonnull)iconURL linkURL:(NSURL * _Nullable)linkURL OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC27LineSDKMessageSendingStatus")
@interface LineSDKMessageSendingStatus : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKMessageSendingStatus * _Nonnull statusOK;)
+ (LineSDKMessageSendingStatus * _Nonnull)statusOK SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKMessageSendingStatus * _Nonnull statusDiscarded;)
+ (LineSDKMessageSendingStatus * _Nonnull)statusDiscarded SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqualToStatus:(LineSDKMessageSendingStatus * _Nonnull)another SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isOK;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKMessageSendingToken")
@interface LineSDKMessageSendingToken : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull token;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LineSDKMessageShareTargetType, open) {
  LineSDKMessageShareTargetTypeFriends = 0,
  LineSDKMessageShareTargetTypeGroups = 1,
};


SWIFT_CLASS("_TtC11LineSDKObjC23LineSDKMessageURIAction")
@interface LineSDKMessageURIAction : LineSDKMessageAction
@property (nonatomic, copy) NSString * _Nullable label;
@property (nonatomic, copy) NSURL * _Nonnull uri;
- (nonnull instancetype)initWithLabel:(NSString * _Nullable)label uri:(NSURL * _Nonnull)uri OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol LineSDKOpenChatCreatingControllerDelegate;

SWIFT_CLASS("_TtC11LineSDKObjC33LineSDKOpenChatCreatingController")
@interface LineSDKOpenChatCreatingController : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) id <LineSDKOpenChatCreatingControllerDelegate> _Nullable delegate;
@property (nonatomic) NSInteger suggestedCategory;
- (void)loadAndPresentIn:(UIViewController * _Nonnull)viewController presentedHandler:(void (^ _Nonnull)(UIViewController * _Nullable, NSError * _Nullable))handler;
+ (LineSDKAuthorizationStatus * _Nonnull)localAuthorizationStatusForCreatingOpenChat SWIFT_WARN_UNUSED_RESULT;
@end

@class LineSDKOpenChatRoomInfo;
@class LineSDKOpenChatRoomCreatingItem;
@class UINavigationController;

SWIFT_PROTOCOL("_TtP11LineSDKObjC41LineSDKOpenChatCreatingControllerDelegate_")
@protocol LineSDKOpenChatCreatingControllerDelegate
@optional
- (void)openChatCreatingController:(LineSDKOpenChatCreatingController * _Nonnull)controller didCreateChatRoom:(LineSDKOpenChatRoomInfo * _Nonnull)room withCreatingItem:(LineSDKOpenChatRoomCreatingItem * _Nonnull)item;
- (void)openChatCreatingController:(LineSDKOpenChatCreatingController * _Nonnull)controller didFailWithError:(NSError * _Nonnull)error withCreatingItem:(LineSDKOpenChatRoomCreatingItem * _Nonnull)item presentingViewController:(UIViewController * _Nonnull)presentingViewController;
- (BOOL)openChatCreatingController:(LineSDKOpenChatCreatingController * _Nonnull)controller shouldPreventUserTermAlertFrom:(UIViewController * _Nonnull)presentingViewController SWIFT_WARN_UNUSED_RESULT;
- (void)openChatCreatingControllerDidCancelCreating:(LineSDKOpenChatCreatingController * _Nonnull)controller;
- (void)openChatCreatingController:(LineSDKOpenChatCreatingController * _Nonnull)controller willPresentCreatingNavigationController:(UINavigationController * _Nonnull)navigationController;
@end


SWIFT_CLASS("_TtC11LineSDKObjC31LineSDKOpenChatRoomCreatingItem")
@interface LineSDKOpenChatRoomCreatingItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull roomDescription;
@property (nonatomic, readonly, copy) NSString * _Nonnull creatorDisplayName;
@property (nonatomic, readonly) NSInteger category;
@property (nonatomic, readonly) BOOL allowSearch;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name roomDescription:(NSString * _Nonnull)roomDescription creatorDisplayName:(NSString * _Nonnull)creatorDisplayName category:(NSInteger)category allowSearch:(BOOL)allowSearch OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC23LineSDKOpenChatRoomInfo")
@interface LineSDKOpenChatRoomInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull openChatId;
@property (nonatomic, readonly, copy) NSURL * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC27LineSDKOpenChatRoomJoinType")
@interface LineSDKOpenChatRoomJoinType : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC34LineSDKOpenChatRoomMembershipState")
@interface LineSDKOpenChatRoomMembershipState : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull state;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC25LineSDKOpenChatRoomStatus")
@interface LineSDKOpenChatRoomStatus : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKPostMultisendMessagesResponseSendingResult;

SWIFT_CLASS("_TtC11LineSDKObjC36LineSDKPostMultisendMessagesResponse")
@interface LineSDKPostMultisendMessagesResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<LineSDKPostMultisendMessagesResponseSendingResult *> * _Nonnull result;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC49LineSDKPostMultisendMessagesResponseSendingResult")
@interface LineSDKPostMultisendMessagesResponseSendingResult : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull to;
@property (nonatomic, readonly, strong) LineSDKMessageSendingStatus * _Nonnull status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC31LineSDKPostSendMessagesResponse")
@interface LineSDKPostSendMessagesResponse : NSObject
@property (nonatomic, readonly, strong) LineSDKMessageSendingStatus * _Nonnull status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@protocol LineSDKShareViewControllerDelegate;

SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKShareViewController")
@interface LineSDKShareViewController : NSObject
@property (nonatomic, readonly, strong) UIViewController * _Nonnull viewController;
@property (nonatomic, strong) UIColor * _Nonnull shareNavigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull shareNavigationBarTextColor;
@property (nonatomic) UIStatusBarStyle shareStatusBarStyle;
@property (nonatomic, copy) NSArray<LineSDKMessage *> * _Nullable shareMessages;
@property (nonatomic, strong) id <LineSDKShareViewControllerDelegate> _Nullable delegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (LineSDKAuthorizationStatus * _Nonnull)localAuthorizationStatusForSendingMessage SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP11LineSDKObjC34LineSDKShareViewControllerDelegate_")
@protocol LineSDKShareViewControllerDelegate
@optional
- (void)shareViewController:(LineSDKShareViewController * _Nonnull)controller didFailLoadingListType:(enum LineSDKMessageShareTargetType)shareType withError:(NSError * _Nonnull)error;
- (void)shareViewControllerDidCancelSharing:(LineSDKShareViewController * _Nonnull)controller;
- (void)shareViewController:(LineSDKShareViewController * _Nonnull)controller didFailSendingMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages toTargets:(NSArray<id <LineSDKShareTarget>> * _Nonnull)targets withError:(NSError * _Nonnull)error;
- (void)shareViewController:(LineSDKShareViewController * _Nonnull)controller didSendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages toTargets:(NSArray<id <LineSDKShareTarget>> * _Nonnull)targets;
- (NSArray<LineSDKMessage *> * _Nonnull)shareViewController:(LineSDKShareViewController * _Nonnull)controller messagesForSendingToTargets:(NSArray<id <LineSDKShareTarget>> * _Nonnull)targets SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shareViewControllerShouldDismissAfterSending:(LineSDKShareViewController * _Nonnull)controller SWIFT_WARN_UNUSED_RESULT;
@end

@class LineSDKTemplateButtonsPayload;
@class LineSDKTemplateConfirmPayload;
@class LineSDKTemplateCarouselPayload;
@class LineSDKTemplateImageCarouselPayload;

SWIFT_CLASS("_TtC11LineSDKObjC29LineSDKTemplateMessagePayload")
@interface LineSDKTemplateMessagePayload : NSObject
@property (nonatomic, readonly, strong) LineSDKTemplateButtonsPayload * _Nullable buttonsPayload;
@property (nonatomic, readonly, strong) LineSDKTemplateConfirmPayload * _Nullable confirmPayload;
@property (nonatomic, readonly, strong) LineSDKTemplateCarouselPayload * _Nullable carouselPayload;
@property (nonatomic, readonly, strong) LineSDKTemplateImageCarouselPayload * _Nullable imageCarouselPayload;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LineSDKTemplateMessagePayloadImageAspectRatio : NSInteger;
enum LineSDKTemplateMessagePayloadImageContentMode : NSInteger;

SWIFT_CLASS("_TtC11LineSDKObjC29LineSDKTemplateButtonsPayload")
@interface LineSDKTemplateButtonsPayload : LineSDKTemplateMessagePayload
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSArray<LineSDKMessageAction *> * _Nonnull actions;
@property (nonatomic, strong) LineSDKMessageAction * _Nullable defaultAction;
@property (nonatomic, copy) NSURL * _Nullable thumbnailImageURL;
@property (nonatomic) enum LineSDKTemplateMessagePayloadImageAspectRatio imageAspectRatio;
@property (nonatomic) enum LineSDKTemplateMessagePayloadImageContentMode imageContentMode;
@property (nonatomic, strong) LineSDKHexColor * _Nullable imageBackgroundColor;
@property (nonatomic, strong) LineSDKMessageSender * _Nullable sender;
- (nonnull instancetype)initWithTitle:(NSString * _Nullable)title text:(NSString * _Nonnull)text actions:(NSArray<LineSDKMessageAction *> * _Nonnull)actions OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKTemplateCarouselPayloadColumn;

SWIFT_CLASS("_TtC11LineSDKObjC30LineSDKTemplateCarouselPayload")
@interface LineSDKTemplateCarouselPayload : LineSDKTemplateMessagePayload
@property (nonatomic, copy) NSArray<LineSDKTemplateCarouselPayloadColumn *> * _Nonnull columns;
@property (nonatomic) enum LineSDKTemplateMessagePayloadImageAspectRatio imageAspectRatio;
@property (nonatomic) enum LineSDKTemplateMessagePayloadImageContentMode imageContentMode;
- (nonnull instancetype)initWithColumns:(NSArray<LineSDKTemplateCarouselPayloadColumn *> * _Nonnull)columns OBJC_DESIGNATED_INITIALIZER;
- (void)addColumn:(LineSDKTemplateCarouselPayloadColumn * _Nonnull)column;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC36LineSDKTemplateCarouselPayloadColumn")
@interface LineSDKTemplateCarouselPayloadColumn : NSObject
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSArray<LineSDKMessageAction *> * _Nonnull actions;
@property (nonatomic, strong) LineSDKMessageAction * _Nullable defaultAction;
@property (nonatomic, copy) NSURL * _Nullable thumbnailImageURL;
@property (nonatomic, strong) LineSDKHexColor * _Nullable imageBackgroundColor;
- (nonnull instancetype)initWithTitle:(NSString * _Nullable)title text:(NSString * _Nonnull)text actions:(NSArray<LineSDKMessageAction *> * _Nonnull)actions OBJC_DESIGNATED_INITIALIZER;
- (void)addAction:(LineSDKMessageAction * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC29LineSDKTemplateConfirmPayload")
@interface LineSDKTemplateConfirmPayload : LineSDKTemplateMessagePayload
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, strong) LineSDKMessageAction * _Nonnull confirmAction;
@property (nonatomic, strong) LineSDKMessageAction * _Nonnull cancelAction;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text confirmAction:(LineSDKMessageAction * _Nonnull)confirmAction cancelAction:(LineSDKMessageAction * _Nonnull)cancelAction OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKTemplateImageCarouselPayloadColumn;

SWIFT_CLASS("_TtC11LineSDKObjC35LineSDKTemplateImageCarouselPayload")
@interface LineSDKTemplateImageCarouselPayload : LineSDKTemplateMessagePayload
@property (nonatomic, copy) NSArray<LineSDKTemplateImageCarouselPayloadColumn *> * _Nonnull columns;
- (nonnull instancetype)initWithColumns:(NSArray<LineSDKTemplateImageCarouselPayloadColumn *> * _Nonnull)columns OBJC_DESIGNATED_INITIALIZER;
- (void)addColumn:(LineSDKTemplateImageCarouselPayloadColumn * _Nonnull)column;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC41LineSDKTemplateImageCarouselPayloadColumn")
@interface LineSDKTemplateImageCarouselPayloadColumn : NSObject
@property (nonatomic, copy) NSURL * _Nonnull imageURL;
@property (nonatomic, strong) LineSDKMessageAction * _Nullable action;
- (nullable instancetype)initWithImageURL:(NSURL * _Nonnull)imageURL action:(LineSDKMessageAction * _Nullable)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC22LineSDKTemplateMessage")
@interface LineSDKTemplateMessage : LineSDKMessage
@property (nonatomic, copy) NSString * _Nonnull altText;
@property (nonatomic, strong) LineSDKTemplateMessagePayload * _Nonnull payload;
- (nonnull instancetype)initWithAltText:(NSString * _Nonnull)altText payload:(LineSDKTemplateMessagePayload * _Nonnull)payload OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, LineSDKTemplateMessagePayloadImageAspectRatio, open) {
  LineSDKTemplateMessagePayloadImageAspectRatioNone = 0,
  LineSDKTemplateMessagePayloadImageAspectRatioRectangle = 1,
  LineSDKTemplateMessagePayloadImageAspectRatioSquare = 2,
};

typedef SWIFT_ENUM(NSInteger, LineSDKTemplateMessagePayloadImageContentMode, open) {
  LineSDKTemplateMessagePayloadImageContentModeNone = 0,
  LineSDKTemplateMessagePayloadImageContentModeAspectFill = 1,
  LineSDKTemplateMessagePayloadImageContentModeAspectFit = 2,
};


SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKTextMessage")
@interface LineSDKTextMessage : LineSDKMessage
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, strong) LineSDKMessageSender * _Nullable sender;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text sender:(LineSDKMessageSender * _Nullable)sender OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC11LineSDKUser")
@interface LineSDKUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull userID;
@property (nonatomic, readonly, copy) NSString * _Nonnull displayName;
@property (nonatomic, readonly, copy) NSString * _Nonnull displayNameOriginal;
@property (nonatomic, readonly, copy) NSString * _Nullable displayNameOverridden;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURL;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURLSmall;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface LineSDKUser (SWIFT_EXTENSION(LineSDKObjC)) <LineSDKShareTarget>
@property (nonatomic, readonly, copy) NSString * _Nonnull targetID;
@property (nonatomic, readonly, copy) NSURL * _Nullable avatarURL;
@end


SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKUserProfile")
@interface LineSDKUserProfile : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull userID;
@property (nonatomic, readonly, copy) NSString * _Nonnull displayName;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURL;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURLLarge;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURLSmall;
@property (nonatomic, readonly, copy) NSString * _Nullable statusMessage;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC19LineSDKVideoMessage")
@interface LineSDKVideoMessage : LineSDKMessage
@property (nonatomic, readonly, copy) NSURL * _Nonnull originalContentURL;
@property (nonatomic, readonly, copy) NSURL * _Nonnull previewImageURL;
- (nullable instancetype)initWithOriginalContentURL:(NSURL * _Nonnull)originalContentURL previewImageURL:(NSURL * _Nonnull)previewImageURL OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;

/// Represents a login button which executes the login function when the user taps the button.
/// note:
///
/// To change the size of the button, use the <code>buttonSize</code> property instead of setting its frame or giving
/// it some size constraints.
SWIFT_CLASS("_TtC11LineSDKObjC11LoginButton")
@interface LoginButton : UIButton
/// Creates a predefined LINE Login button.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Creates a predefined LINE Login button.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Overrides the getter of the <code>intrinsicContentSize</code> property to support automatic layout.
@property (nonatomic, readonly) CGSize intrinsicContentSize;
/// Executes the login action when the user taps the login button.
- (void)login;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface NSNotification (SWIFT_EXTENSION(LineSDKObjC))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull LineSDKOldAccessTokenKey;)
+ (NSString * _Nonnull)LineSDKOldAccessTokenKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull LineSDKNewAccessTokenKey;)
+ (NSString * _Nonnull)LineSDKNewAccessTokenKey SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSNotification (SWIFT_EXTENSION(LineSDKObjC))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull LineSDKAccessTokenDidUpdate;)
+ (NSNotificationName _Nonnull)LineSDKAccessTokenDidUpdate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull LineSDKAccessTokenDidRemove;)
+ (NSNotificationName _Nonnull)LineSDKAccessTokenDidRemove SWIFT_WARN_UNUSED_RESULT;
@end



@class NSBundle;

SWIFT_CLASS("_TtC11LineSDKObjC25StyleNavigationController")
@interface StyleNavigationController : UINavigationController
- (void)viewDidLoad;
/// :nodoc:
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LineSDKObjC36OpenChatCreatingNavigationController")
@interface OpenChatCreatingNavigationController : StyleNavigationController
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// A view controller that provides a default UI for selecting friends and groups,
/// then share some <code>Message</code>s to the selected targets.
/// <h2>Overview</h2>
/// A <code>ShareViewController</code> allows users to share a message to LINE via a default UI.
/// An authorized user can browse, search, and select up to 10 users or groups in a tab-based table view UI.
/// After choosing their share targets, the user taps “Send” to share a preset <code>Message</code> to the targets.
/// The message appears to the target recipients as having been sent by the user themselves.
/// <code>ShareViewController</code> is a subclass of <code>UINavigationController</code>, so you need to create and present it modally.
/// To use <code>ShareViewController</code>, follow these steps:
/// <ol>
///   <li>
///     Verify that the user has granted your app the necessary permissions. <code>ShareViewController</code> will show both
///     Friends and Groups tabs. To get the friend list and group list, and send a message, you need
///     <code>LoginPermission.oneTimeShare</code>. Use <code>ShareViewController.localAuthorizationStatusForSendingMessage()</code> to check
///     whether you have a valid token with the necessary permissions. If you don’t have them, don’t create and
///     show the <code>ShareViewController</code>, but instead prompt your user to grant your app the needed permissions.
///   </li>
///   <li>
///     Create a <code>ShareViewController</code> instance. <code>ShareViewController</code> can’t be initialized from Storyboard or
///     XIB. Use the provided initializer <code>init()</code>.
///   </li>
///   <li>
///     Specify <code>messages</code> to tell the <code>ShareViewController</code> the <code>Message</code> values you want to share.
///   </li>
///   <li>
///     Present the created <code>ShareViewController</code> modally by calling <code>present(_:animated:completion:)</code>.
///   </li>
/// </ol>
/// You can customize the <code>ShareViewController</code> navigation bar style and status bar content style to match your app.
/// Use <code>navigationBarTintColor</code>, <code>navigationBarTextColor</code>, and <code>statusBarStyle</code> to do so.
/// <h2>Share Delegate</h2>
/// <code>ShareViewController</code> will deliver results of user interaction to a delegate object. To get these related events,
/// you must provide a delegate that conforms to the <code>ShareViewControllerDelegate</code> protocol, and set it to <code>shareDelegate</code>
/// property.
/// See <code>ShareViewControllerDelegate</code> for more information.
/// warning:
///
/// Although <code>ShareViewController</code> is marked as <code>open</code>, we recommend against creating a subclass for it. The class is
/// intended to be used as-is, to ensure a consistent sharing experience across all LINE and LINE SDK integrations. Users
/// expect sharing messages to friends and groups in LINE to work the same across different apps. Nevertheless, if you
/// absolutely need a custom sharing interaction, you can create it using the related APIs.
SWIFT_CLASS("_TtC11LineSDKObjC19ShareViewController")
@interface ShareViewController : StyleNavigationController
/// Creates a <code>ShareViewController</code> with default behavior. Always use this initializer to create a
/// <code>ShareViewController</code> instance.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// <code>ShareViewController</code> can’t be created from Storyboard or XIB file. This method merely throws a
/// fatal error.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class UIPresentationController;

@interface ShareViewController (SWIFT_EXTENSION(LineSDKObjC)) <UIAdaptivePresentationControllerDelegate>
/// :nodoc:
- (void)presentationControllerDidDismiss:(UIPresentationController * _Nonnull)presentationController;
/// :nodoc:
- (BOOL)presentationControllerShouldDismiss:(UIPresentationController * _Nonnull)presentationController SWIFT_WARN_UNUSED_RESULT;
@end













#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef LINESDKOBJC_SWIFT_H
#define LINESDKOBJC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Dispatch;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LineSDKObjC",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


@class LineSDKUserProfile;
@class LineSDKCallbackQueue;
@class NSString;
@class LineSDKGetFriendsResponse;
enum LineSDKGetFriendsRequestSort : NSInteger;
@class LineSDKGetApproversInFriendsResponse;
@class LineSDKGetGroupsResponse;
@class LineSDKGetApproversInGroupResponse;
@class LineSDKMessage;
@class LineSDKPostSendMessagesResponse;
@class LineSDKPostMultisendMessagesResponse;
@class LineSDKGetBotFriendshipStatusResponse;
@class LineSDKMessageSendingToken;
@class LineSDKOpenChatRoomStatus;
@class LineSDKOpenChatRoomMembershipState;
@class LineSDKOpenChatRoomJoinType;

SWIFT_CLASS("_TtC11LineSDKObjC10LineSDKAPI")
@interface LineSDKAPI : NSObject
+ (void)getProfileWithCompletionHandler:(void (^ _Nonnull)(LineSDKUserProfile * _Nullable, NSError * _Nullable))completion;
+ (void)getProfileWithCallbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKUserProfile * _Nullable, NSError * _Nullable))completion;
+ (void)getFriendsWithPageToken:(NSString * _Nullable)pageToken completionHandler:(void (^ _Nonnull)(LineSDKGetFriendsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getFriendsWithSort:(enum LineSDKGetFriendsRequestSort)sort pageToken:(NSString * _Nullable)pageToken completionHandler:(void (^ _Nonnull)(LineSDKGetFriendsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getFriendsWithSort:(enum LineSDKGetFriendsRequestSort)sort pageToken:(NSString * _Nullable)pageToken callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKGetFriendsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getApproversInFriendsWithPageToken:(NSString * _Nullable)pageToken completionHandler:(void (^ _Nonnull)(LineSDKGetApproversInFriendsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getApproversInFriendsWithPageToken:(NSString * _Nullable)pageToken callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKGetApproversInFriendsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getGroupsWithPageToken:(NSString * _Nullable)pageToken completionHandler:(void (^ _Nonnull)(LineSDKGetGroupsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getGroupsWithPageToken:(NSString * _Nullable)pageToken callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKGetGroupsResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getApproversInGroupWithGroupID:(NSString * _Nonnull)groupID pageToken:(NSString * _Nullable)pageToken completionHandler:(void (^ _Nonnull)(LineSDKGetApproversInGroupResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getApproversInGroupWithGroupID:(NSString * _Nonnull)groupID pageToken:(NSString * _Nullable)pageToken callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKGetApproversInGroupResponse * _Nullable, NSError * _Nullable))completion;
+ (void)sendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages to:(NSString * _Nonnull)chatID completionHandler:(void (^ _Nonnull)(LineSDKPostSendMessagesResponse * _Nullable, NSError * _Nullable))completion;
+ (void)sendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages to:(NSString * _Nonnull)chatID callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKPostSendMessagesResponse * _Nullable, NSError * _Nullable))completion;
+ (void)multiSendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages to:(NSArray<NSString *> * _Nonnull)userIDs completionHandler:(void (^ _Nonnull)(LineSDKPostMultisendMessagesResponse * _Nullable, NSError * _Nullable))completion;
+ (void)multiSendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages to:(NSArray<NSString *> * _Nonnull)userIDs callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKPostMultisendMessagesResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getBotFriendshipStatusWithCompletionHandler:(void (^ _Nonnull)(LineSDKGetBotFriendshipStatusResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getBotFriendshipStatusWithCallbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKGetBotFriendshipStatusResponse * _Nullable, NSError * _Nullable))completion;
+ (void)getMessageSendingOneTimeTokenWithUserIDs:(NSArray<NSString *> * _Nonnull)userIDs completionHander:(void (^ _Nonnull)(LineSDKMessageSendingToken * _Nullable, NSError * _Nullable))completion;
+ (void)getMessageSendingOneTimeTokenWithUserIDs:(NSArray<NSString *> * _Nonnull)userIDs callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHander:(void (^ _Nonnull)(LineSDKMessageSendingToken * _Nullable, NSError * _Nullable))completion;
+ (void)multiSendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages withMessageToken:(LineSDKMessageSendingToken * _Nonnull)token completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)multiSendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages withMessageToken:(LineSDKMessageSendingToken * _Nonnull)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)getOpenChatRoomStatusWithOpenChatId:(NSString * _Nonnull)openChatId completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomStatus * _Nullable, NSError * _Nullable))completion;
+ (void)getOpenChatRoomStatusWithOpenChatId:(NSString * _Nonnull)openChatId callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomStatus * _Nullable, NSError * _Nullable))completion;
+ (void)getOpenChatRoomMembershipStateWithOpenChatId:(NSString * _Nonnull)openChatId completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomMembershipState * _Nullable, NSError * _Nullable))completion;
+ (void)getOpenChatRoomMembershipStateWithOpenChatId:(NSString * _Nonnull)openChatId callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomMembershipState * _Nullable, NSError * _Nullable))completion;
+ (void)getOpenChatRoomJoinTypeWithOpenChatId:(NSString * _Nonnull)openChatId completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomJoinType * _Nullable, NSError * _Nullable))completion;
+ (void)getOpenChatRoomJoinTypeWithOpenChatId:(NSString * _Nonnull)openChatId callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKOpenChatRoomJoinType * _Nullable, NSError * _Nullable))completion;
+ (void)postOpenChatRoomJoinWithOpenChatId:(NSString * _Nonnull)openChatId displayName:(NSString * _Nonnull)displayName completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)postOpenChatRoomJoinWithOpenChatId:(NSString * _Nonnull)openChatId displayName:(NSString * _Nonnull)displayName callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LineSDKAccessToken;
@class LineSDKAccessTokenVerifyResult;

@interface LineSDKAPI (SWIFT_EXTENSION(LineSDKObjC))
+ (void)refreshAccessTokenWithCompletionHandler:(void (^ _Nonnull)(LineSDKAccessToken * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.refreshAccessToken");
+ (void)refreshAccessTokenWithCallbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKAccessToken * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.refreshAccessToken");
+ (void)revokeAccessTokenWithCompletionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.revokeAccessToken");
+ (void)revokeAccessToken:(NSString * _Nullable)token completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.revokeAccessToken");
+ (void)revokeAccessToken:(NSString * _Nullable)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.revokeAccessToken");
+ (void)verifyAccessTokenWithCompletionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.verifyAccessToken");
+ (void)verifyAccessToken:(NSString * _Nullable)token completionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.verifyAccessToken");
+ (void)verifyAccessToken:(NSString * _Nullable)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n        Auth-related APIs don't refresh access tokens automatically.\n        Make sure you don't need token refreshing as a side effect, then use methods in `LineSDKAuthAPI` instead.\n        ", "LineSDKAuthAPI.verifyAccessToken");
@end


SWIFT_CLASS("_TtC11LineSDKObjC15LineSDKAPIError")
@interface LineSDKAPIError : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull error;
@property (nonatomic, readonly, copy) NSString * _Nullable detail;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSDate;
@class LineSDKJWT;
@class LineSDKLoginPermission;

SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKAccessToken")
@interface LineSDKAccessToken : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, strong) LineSDKJWT * _Nullable IDToken;
@property (nonatomic, readonly, copy) NSString * _Nullable IDTokenRaw;
@property (nonatomic, readonly, copy) NSArray<LineSDKLoginPermission *> * _Nonnull permissions;
@property (nonatomic, readonly, copy) NSDate * _Nonnull expiresAt;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC23LineSDKAccessTokenStore")
@interface LineSDKAccessTokenStore : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKAccessTokenStore * _Nonnull sharedStore;)
+ (LineSDKAccessTokenStore * _Nonnull)sharedStore SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) LineSDKAccessToken * _Nullable currentToken;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC30LineSDKAccessTokenVerifyResult")
@interface LineSDKAccessTokenVerifyResult : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull channelID;
@property (nonatomic, readonly, copy) NSArray<LineSDKLoginPermission *> * _Nonnull permissions;
@property (nonatomic, readonly) NSTimeInterval expiresIn;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKTextMessage;
@class LineSDKImageMessage;
@class LineSDKVideoMessage;
@class LineSDKAudioMessage;
@class LineSDKLocationMessage;
@class LineSDKTemplateMessage;
@class LineSDKFlexMessage;

SWIFT_CLASS("_TtC11LineSDKObjC14LineSDKMessage")
@interface LineSDKMessage : NSObject
@property (nonatomic, readonly, strong) LineSDKTextMessage * _Nullable textMessage;
@property (nonatomic, readonly, strong) LineSDKImageMessage * _Nullable imageMessage;
@property (nonatomic, readonly, strong) LineSDKVideoMessage * _Nullable videoMessage;
@property (nonatomic, readonly, strong) LineSDKAudioMessage * _Nullable audioMessage;
@property (nonatomic, readonly, strong) LineSDKLocationMessage * _Nullable locationMessage;
@property (nonatomic, readonly, strong) LineSDKTemplateMessage * _Nullable templateMessage;
@property (nonatomic, readonly, strong) LineSDKFlexMessage * _Nullable flexMessage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;

SWIFT_CLASS("_TtC11LineSDKObjC19LineSDKAudioMessage")
@interface LineSDKAudioMessage : LineSDKMessage
@property (nonatomic, readonly, copy) NSURL * _Nonnull originalContentURL;
@property (nonatomic, readonly) NSTimeInterval duration;
- (nullable instancetype)initWithOriginalContentURL:(NSURL * _Nonnull)originalContentURL duration:(NSTimeInterval)duration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC14LineSDKAuthAPI")
@interface LineSDKAuthAPI : NSObject
+ (void)refreshAccessTokenWithCompletionHandler:(void (^ _Nonnull)(LineSDKAccessToken * _Nullable, NSError * _Nullable))completion;
+ (void)refreshAccessTokenWithCallbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKAccessToken * _Nullable, NSError * _Nullable))completion;
+ (void)revokeAccessTokenWithCompletionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)revokeAccessToken:(NSString * _Nullable)token completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)revokeAccessToken:(NSString * _Nullable)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)revokeRefreshTokenWithCompletionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)revokeRefreshToken:(NSString * _Nullable)token completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)revokeRefreshToken:(NSString * _Nullable)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
+ (void)verifyAccessTokenWithCompletionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion;
+ (void)verifyAccessToken:(NSString * _Nullable)token completionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion;
+ (void)verifyAccessToken:(NSString * _Nullable)token callbackQueue:(LineSDKCallbackQueue * _Nonnull)queue completionHandler:(void (^ _Nonnull)(LineSDKAccessTokenVerifyResult * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKAuthorizationStatus")
@interface LineSDKAuthorizationStatus : NSObject
@property (nonatomic, readonly) NSInteger rawValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKAuthorizationStatus * _Nonnull authorized;)
+ (LineSDKAuthorizationStatus * _Nonnull)authorized SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKAuthorizationStatus * _Nonnull lackOfToken;)
+ (LineSDKAuthorizationStatus * _Nonnull)lackOfToken SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKAuthorizationStatus * _Nonnull lackOfPermissions;)
+ (LineSDKAuthorizationStatus * _Nonnull)lackOfPermissions SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithRawValue:(NSInteger)rawValue OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSOperationQueue;

SWIFT_CLASS("_TtC11LineSDKObjC20LineSDKCallbackQueue")
@interface LineSDKCallbackQueue : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKCallbackQueue * _Nonnull asyncMain;)
+ (LineSDKCallbackQueue * _Nonnull)asyncMain SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKCallbackQueue * _Nonnull currentMainOrAsync;)
+ (LineSDKCallbackQueue * _Nonnull)currentMainOrAsync SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKCallbackQueue * _Nonnull untouch;)
+ (LineSDKCallbackQueue * _Nonnull)untouch SWIFT_WARN_UNUSED_RESULT;
+ (LineSDKCallbackQueue * _Nonnull)callbackQueueWithDispatchQueue:(dispatch_queue_t _Nonnull)dispatchQueue SWIFT_WARN_UNUSED_RESULT;
+ (LineSDKCallbackQueue * _Nonnull)callbackQueueWithOperationQueue:(NSOperationQueue * _Nonnull)operationQueue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC15LineSDKConstant")
@interface LineSDKConstant : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull SDKVersion;)
+ (NSString * _Nonnull)SDKVersion SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LineSDKObjC20LineSDKErrorConstant")
@interface LineSDKErrorConstant : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull errorDomain;)
+ (NSString * _Nonnull)errorDomain SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull cryptoErrorDomain;)
+ (NSString * _Nonnull)cryptoErrorDomain SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyUnderlyingError;)
+ (NSString * _Nonnull)userInfoKeyUnderlyingError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyStatusCode;)
+ (NSString * _Nonnull)userInfoKeyStatusCode SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyResultCode;)
+ (NSString * _Nonnull)userInfoKeyResultCode SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyType;)
+ (NSString * _Nonnull)userInfoKeyType SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyData;)
+ (NSString * _Nonnull)userInfoKeyData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyAPIError;)
+ (NSString * _Nonnull)userInfoKeyAPIError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyRaw;)
+ (NSString * _Nonnull)userInfoKeyRaw SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyUrl;)
+ (NSString * _Nonnull)userInfoKeyUrl SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyMessage;)
+ (NSString * _Nonnull)userInfoKeyMessage SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyStatus;)
+ (NSString * _Nonnull)userInfoKeyStatus SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyText;)
+ (NSString * _Nonnull)userInfoKeyText SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyEncoding;)
+ (NSString * _Nonnull)userInfoKeyEncoding SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyParameterName;)
+ (NSString * _Nonnull)userInfoKeyParameterName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyReason;)
+ (NSString * _Nonnull)userInfoKeyReason SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyIndex;)
+ (NSString * _Nonnull)userInfoKeyIndex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyKey;)
+ (NSString * _Nonnull)userInfoKeyKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userInfoKeyGot;)
+ (NSString * _Nonnull)userInfoKeyGot SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LineSDKHexColor;

SWIFT_CLASS("_TtC11LineSDKObjC21LineSDKFlexBlockStyle")
@interface LineSDKFlexBlockStyle : NSObject
@property (nonatomic, strong) LineSDKHexColor * _Nullable backgroundColor;
@property (nonatomic) BOOL separator;
@property (nonatomic, strong) LineSDKHexColor * _Nullable separatorColor;
- (nonnull instancetype)initWithBackgroundColor:(LineSDKHexColor * _Nullable)backgroundColor separator:(BOOL)separator separatorColor:(LineSDKHexColor * _Nullable)separatorColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKFlexBoxComponent;
@class LineSDKFlexTextComponent;
@class LineSDKFlexButtonComponent;
@class LineSDKFlexImageComponent;
@class LineSDKFlexFillerComponent;
@class LineSDKFlexIconComponent;
@class LineSDKFlexSeparatorComponent;
@class LineSDKFlexSpacerComponent;

SWIFT_CLASS("_TtC11LineSDKObjC27LineSDKFlexMessageComponent")
@interface LineSDKFlexMessageComponent : NSObject
@property (nonatomic, readonly, strong) LineSDKFlexBoxComponent * _Nullable boxComponent;
@property (nonatomic, readonly, strong) LineSDKFlexTextComponent * _Nullable textComponent;
@property (nonatomic, readonly, strong) LineSDKFlexButtonComponent * _Nullable buttonComponent;
@property (nonatomic, readonly, strong) LineSDKFlexImageComponent * _Nullable imageComponent;
@property (nonatomic, readonly, strong) LineSDKFlexFillerComponent * _Nullable fillerComponent;
@property (nonatomic, readonly, strong) LineSDKFlexIconComponent * _Nullable iconComponent;
@property (nonatomic, readonly, strong) LineSDKFlexSeparatorComponent * _Nullable separatorComponent;
@property (nonatomic, readonly, strong) LineSDKFlexSpacerComponent * _Nullable spacerComponent;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LineSDKFlexMessageComponentLayout : NSInteger;
@class NSNumber;
enum LineSDKFlexMessageComponentSpacing : NSInteger;
enum LineSDKFlexMessageComponentMargin : NSInteger;
@class LineSDKMessageAction;

SWIFT_CLASS("_TtC11LineSDKObjC23LineSDKFlexBoxComponent")
@interface LineSDKFlexBoxComponent : LineSDKFlexMessageComponent
@property (nonatomic, readonly) enum LineSDKFlexMessageComponentLayout layout;
@property (nonatomic, copy) NSArray<LineSDKFlexMessageComponent *> * _Nonnull contents;
@property (nonatomic, strong) NSNumber * _Nullable flex;
@property (nonatomic) enum LineSDKFlexMessageComponentSpacing spacing;
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic, strong) LineSDKMessageAction * _Nullable action;
- (nonnull instancetype)initWithLayout:(enum LineSDKFlexMessageComponentLayout)layout contents:(NSArray<LineSDKFlexMessageComponent *> * _Nonnull)contents OBJC_DESIGNATED_INITIALIZER;
- (void)addComponent:(LineSDKFlexMessageComponent * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKFlexBubbleContainer;
@class LineSDKFlexCarouselContainer;

SWIFT_CLASS("_TtC11LineSDKObjC27LineSDKFlexMessageContainer")
@interface LineSDKFlexMessageContainer : NSObject
@property (nonatomic, readonly, strong) LineSDKFlexBubbleContainer * _Nullable bubbleContainer;
@property (nonatomic, readonly, strong) LineSDKFlexCarouselContainer * _Nullable carouselContainer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LineSDKFlexBubbleContainerStyle;
enum LineSDKFlexBubbleContainerDirection : NSInteger;

SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKFlexBubbleContainer")
@interface LineSDKFlexBubbleContainer : LineSDKFlexMessageContainer
@property (nonatomic, strong) LineSDKFlexBoxComponent * _Nullable header;
@property (nonatomic, strong) LineSDKFlexImageComponent * _Nullable hero;
@property (nonatomic, strong) LineSDKFlexBoxComponent * _Nullable body;
@property (nonatomic, strong) LineSDKFlexBoxComponent * _Nullable footer;
@property (nonatomic, strong) LineSDKFlexBubbleContainerStyle * _Nullable style;
@property (nonatomic) enum LineSDKFlexBubbleContainerDirection direction;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LineSDKFlexBubbleContainerDirection, open) {
  LineSDKFlexBubbleContainerDirectionNone = 0,
  LineSDKFlexBubbleContainerDirectionLeftToRight = 1,
  LineSDKFlexBubbleContainerDirectionRightToLeft = 2,
};


SWIFT_CLASS("_TtC11LineSDKObjC31LineSDKFlexBubbleContainerStyle")
@interface LineSDKFlexBubbleContainerStyle : NSObject
@property (nonatomic, strong) LineSDKFlexBlockStyle * _Nullable header;
@property (nonatomic, strong) LineSDKFlexBlockStyle * _Nullable hero;
@property (nonatomic, strong) LineSDKFlexBlockStyle * _Nullable body;
@property (nonatomic, strong) LineSDKFlexBlockStyle * _Nullable footer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LineSDKFlexMessageComponentHeight : NSInteger;
enum LineSDKFlexButtonComponentStyle : NSInteger;
enum LineSDKFlexMessageComponentGravity : NSInteger;

SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKFlexButtonComponent")
@interface LineSDKFlexButtonComponent : LineSDKFlexMessageComponent
@property (nonatomic, strong) LineSDKMessageAction * _Nonnull action;
@property (nonatomic, strong) NSNumber * _Nullable flex;
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic) enum LineSDKFlexMessageComponentHeight height;
@property (nonatomic) enum LineSDKFlexButtonComponentStyle style;
@property (nonatomic, strong) LineSDKHexColor * _Nullable color;
@property (nonatomic) enum LineSDKFlexMessageComponentGravity gravity;
- (nonnull instancetype)initWithAction:(LineSDKMessageAction * _Nonnull)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LineSDKFlexButtonComponentStyle, open) {
  LineSDKFlexButtonComponentStyleNone = 0,
  LineSDKFlexButtonComponentStyleLink = 1,
  LineSDKFlexButtonComponentStylePrimary = 2,
  LineSDKFlexButtonComponentStyleSecondary = 3,
};


SWIFT_CLASS("_TtC11LineSDKObjC28LineSDKFlexCarouselContainer")
@interface LineSDKFlexCarouselContainer : LineSDKFlexMessageContainer
@property (nonatomic, copy) NSArray<LineSDKFlexBubbleContainer *> * _Nonnull contents;
- (nonnull instancetype)initWithContents:(NSArray<LineSDKFlexBubbleContainer *> * _Nonnull)contents OBJC_DESIGNATED_INITIALIZER;
- (void)addBubble:(LineSDKFlexBubbleContainer * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKFlexFillerComponent")
@interface LineSDKFlexFillerComponent : LineSDKFlexMessageComponent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LineSDKFlexMessageComponentSize : NSInteger;
enum LineSDKFlexMessageComponentAspectRatio : NSInteger;

SWIFT_CLASS("_TtC11LineSDKObjC24LineSDKFlexIconComponent")
@interface LineSDKFlexIconComponent : LineSDKFlexMessageComponent
@property (nonatomic, readonly, copy) NSURL * _Nonnull url;
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic) enum LineSDKFlexMessageComponentSize size;
@property (nonatomic) enum LineSDKFlexMessageComponentAspectRatio aspectRatio;
- (nullable instancetype)initWithIconURL:(NSURL * _Nonnull)iconURL OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum LineSDKFlexMessageComponentAlignment : NSInteger;
enum LineSDKFlexMessageComponentAspectMode : NSInteger;

SWIFT_CLASS("_TtC11LineSDKObjC25LineSDKFlexImageComponent")
@interface LineSDKFlexImageComponent : LineSDKFlexMessageComponent
@property (nonatomic, readonly, copy) NSURL * _Nonnull url;
@property (nonatomic, strong) NSNumber * _Nullable flex;
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic) enum LineSDKFlexMessageComponentAlignment alignment;
@property (nonatomic) enum LineSDKFlexMessageComponentGravity gravity;
@property (nonatomic) enum LineSDKFlexMessageComponentSize size;
@property (nonatomic) enum LineSDKFlexMessageComponentAspectRatio aspectRatio;
@property (nonatomic) enum LineSDKFlexMessageComponentAspectMode aspectMode;
@property (nonatomic, strong) LineSDKHexColor * _Nullable backgroundColor;
- (nullable instancetype)initWithImageURL:(NSURL * _Nonnull)imageURL OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKFlexMessage")
@interface LineSDKFlexMessage : LineSDKMessage
@property (nonatomic, copy) NSString * _Nonnull altText;
@property (nonatomic, strong) LineSDKFlexMessageContainer * _Nonnull contents;
- (nonnull instancetype)initWithAltText:(NSString * _Nonnull)altText container:(LineSDKFlexMessageContainer * _Nonnull)container OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentAlignment, open) {
  LineSDKFlexMessageComponentAlignmentNone = 0,
  LineSDKFlexMessageComponentAlignmentStart = 1,
  LineSDKFlexMessageComponentAlignmentEnd = 2,
  LineSDKFlexMessageComponentAlignmentCenter = 3,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentAspectMode, open) {
  LineSDKFlexMessageComponentAspectModeNone = 0,
  LineSDKFlexMessageComponentAspectModeFill = 1,
  LineSDKFlexMessageComponentAspectModeFit = 2,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentAspectRatio, open) {
  LineSDKFlexMessageComponentAspectRatioNone = 0,
  LineSDKFlexMessageComponentAspectRatioRatio_1x1 = 1,
  LineSDKFlexMessageComponentAspectRatioRatio_1_51x1 = 2,
  LineSDKFlexMessageComponentAspectRatioRatio_1_91x1 = 3,
  LineSDKFlexMessageComponentAspectRatioRatio_4x3 = 4,
  LineSDKFlexMessageComponentAspectRatioRatio_16x9 = 5,
  LineSDKFlexMessageComponentAspectRatioRatio_20x13 = 6,
  LineSDKFlexMessageComponentAspectRatioRatio_2x1 = 7,
  LineSDKFlexMessageComponentAspectRatioRatio_3x1 = 8,
  LineSDKFlexMessageComponentAspectRatioRatio_3x4 = 9,
  LineSDKFlexMessageComponentAspectRatioRatio_9x16 = 10,
  LineSDKFlexMessageComponentAspectRatioRatio_1x2 = 11,
  LineSDKFlexMessageComponentAspectRatioRatio_1x3 = 12,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentGravity, open) {
  LineSDKFlexMessageComponentGravityNone = 0,
  LineSDKFlexMessageComponentGravityTop = 1,
  LineSDKFlexMessageComponentGravityBottom = 2,
  LineSDKFlexMessageComponentGravityCenter = 3,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentHeight, open) {
  LineSDKFlexMessageComponentHeightNone = 0,
  LineSDKFlexMessageComponentHeightSm = 1,
  LineSDKFlexMessageComponentHeightMd = 2,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentLayout, open) {
  LineSDKFlexMessageComponentLayoutHorizontal = 0,
  LineSDKFlexMessageComponentLayoutVertical = 1,
  LineSDKFlexMessageComponentLayoutBaseline = 2,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentMargin, open) {
  LineSDKFlexMessageComponentMarginNone = 0,
  LineSDKFlexMessageComponentMarginXs = 1,
  LineSDKFlexMessageComponentMarginSm = 2,
  LineSDKFlexMessageComponentMarginMd = 3,
  LineSDKFlexMessageComponentMarginLg = 4,
  LineSDKFlexMessageComponentMarginXl = 5,
  LineSDKFlexMessageComponentMarginXxl = 6,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentSize, open) {
  LineSDKFlexMessageComponentSizeNone = 0,
  LineSDKFlexMessageComponentSizeXxs = 1,
  LineSDKFlexMessageComponentSizeXs = 2,
  LineSDKFlexMessageComponentSizeSm = 3,
  LineSDKFlexMessageComponentSizeMd = 4,
  LineSDKFlexMessageComponentSizeLg = 5,
  LineSDKFlexMessageComponentSizeXl = 6,
  LineSDKFlexMessageComponentSizeXxl = 7,
  LineSDKFlexMessageComponentSizeXl3 = 8,
  LineSDKFlexMessageComponentSizeXl4 = 9,
  LineSDKFlexMessageComponentSizeXl5 = 10,
  LineSDKFlexMessageComponentSizeFull = 11,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentSpacing, open) {
  LineSDKFlexMessageComponentSpacingNone = 0,
  LineSDKFlexMessageComponentSpacingXs = 1,
  LineSDKFlexMessageComponentSpacingSm = 2,
  LineSDKFlexMessageComponentSpacingMd = 3,
  LineSDKFlexMessageComponentSpacingLg = 4,
  LineSDKFlexMessageComponentSpacingXl = 5,
  LineSDKFlexMessageComponentSpacingXxl = 6,
};

typedef SWIFT_ENUM(NSInteger, LineSDKFlexMessageComponentWeight, open) {
  LineSDKFlexMessageComponentWeightNone = 0,
  LineSDKFlexMessageComponentWeightRegular = 1,
  LineSDKFlexMessageComponentWeightBold = 2,
};



SWIFT_CLASS("_TtC11LineSDKObjC29LineSDKFlexSeparatorComponent")
@interface LineSDKFlexSeparatorComponent : LineSDKFlexMessageComponent
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic, strong) LineSDKHexColor * _Nullable color;
- (nonnull instancetype)initWithMargin:(enum LineSDKFlexMessageComponentMargin)margin color:(LineSDKHexColor * _Nullable)color OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKFlexSpacerComponent")
@interface LineSDKFlexSpacerComponent : LineSDKFlexMessageComponent
@property (nonatomic) enum LineSDKFlexMessageComponentSize size;
- (nonnull instancetype)initWithSize:(enum LineSDKFlexMessageComponentSize)size OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC24LineSDKFlexTextComponent")
@interface LineSDKFlexTextComponent : LineSDKFlexMessageComponent
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, strong) NSNumber * _Nullable flex;
@property (nonatomic) enum LineSDKFlexMessageComponentMargin margin;
@property (nonatomic) enum LineSDKFlexMessageComponentSize size;
@property (nonatomic) enum LineSDKFlexMessageComponentAlignment alignment;
@property (nonatomic) enum LineSDKFlexMessageComponentGravity gravity;
@property (nonatomic) BOOL wrapping;
@property (nonatomic, strong) NSNumber * _Nullable maxLines;
@property (nonatomic) enum LineSDKFlexMessageComponentWeight weight;
@property (nonatomic, strong) LineSDKHexColor * _Nullable color;
@property (nonatomic, strong) LineSDKMessageAction * _Nullable action;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKUser;

SWIFT_CLASS("_TtC11LineSDKObjC36LineSDKGetApproversInFriendsResponse")
@interface LineSDKGetApproversInFriendsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<LineSDKUser *> * _Nonnull friends;
@property (nonatomic, readonly, copy) NSString * _Nullable pageToken;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC34LineSDKGetApproversInGroupResponse")
@interface LineSDKGetApproversInGroupResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<LineSDKUser *> * _Nonnull users;
@property (nonatomic, readonly, copy) NSString * _Nullable pageToken;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC37LineSDKGetBotFriendshipStatusResponse")
@interface LineSDKGetBotFriendshipStatusResponse : NSObject
@property (nonatomic, readonly) BOOL friendFlag;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LineSDKGetFriendsRequestSort, open) {
  LineSDKGetFriendsRequestSortNone = 0,
  LineSDKGetFriendsRequestSortName = 1,
  LineSDKGetFriendsRequestSortRelation = 2,
};


SWIFT_CLASS("_TtC11LineSDKObjC25LineSDKGetFriendsResponse")
@interface LineSDKGetFriendsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<LineSDKUser *> * _Nonnull friends;
@property (nonatomic, readonly, copy) NSString * _Nullable pageToken;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKGroup;

SWIFT_CLASS("_TtC11LineSDKObjC24LineSDKGetGroupsResponse")
@interface LineSDKGetGroupsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<LineSDKGroup *> * _Nonnull groups;
@property (nonatomic, readonly, copy) NSString * _Nullable pageToken;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC12LineSDKGroup")
@interface LineSDKGroup : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull groupID;
@property (nonatomic, readonly, copy) NSString * _Nonnull groupName;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURL;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURLSmall;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP11LineSDKObjC18LineSDKShareTarget_")
@protocol LineSDKShareTarget
@property (nonatomic, readonly, copy) NSString * _Nonnull targetID;
@property (nonatomic, readonly, copy) NSString * _Nonnull displayName;
@property (nonatomic, readonly, copy) NSURL * _Nullable avatarURL;
@end


@interface LineSDKGroup (SWIFT_EXTENSION(LineSDKObjC)) <LineSDKShareTarget>
@property (nonatomic, readonly, copy) NSString * _Nonnull targetID;
@property (nonatomic, readonly, copy) NSString * _Nonnull displayName;
@property (nonatomic, readonly, copy) NSURL * _Nullable avatarURL;
@end

@class UIColor;

SWIFT_CLASS("_TtC11LineSDKObjC15LineSDKHexColor")
@interface LineSDKHexColor : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull rawValue;
@property (nonatomic, readonly, strong) UIColor * _Nonnull color;
- (nonnull instancetype)init:(UIColor * _Nonnull)color OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRawValue:(NSString * _Nonnull)rawValue defaultColor:(UIColor * _Nonnull)color OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqualsToColor:(LineSDKHexColor * _Nonnull)another SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKMessageSender;

SWIFT_CLASS("_TtC11LineSDKObjC19LineSDKImageMessage")
@interface LineSDKImageMessage : LineSDKMessage
@property (nonatomic, readonly, copy) NSURL * _Nonnull originalContentURL;
@property (nonatomic, readonly, copy) NSURL * _Nonnull previewImageURL;
@property (nonatomic) BOOL animated;
@property (nonatomic, copy) NSString * _Nullable fileExtension;
@property (nonatomic, strong) LineSDKMessageSender * _Nullable sender;
- (nullable instancetype)initWithOriginalContentURL:(NSURL * _Nonnull)originalContentURL previewImageURL:(NSURL * _Nonnull)previewImageURL;
- (nullable instancetype)initWithOriginalContentURL:(NSURL * _Nonnull)originalContentURL previewImageURL:(NSURL * _Nonnull)previewImageURL animated:(BOOL)animated fileExtension:(NSString * _Nullable)fileExtension sender:(LineSDKMessageSender * _Nullable)sender OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKJWTPayload;

SWIFT_CLASS("_TtC11LineSDKObjC10LineSDKJWT")
@interface LineSDKJWT : NSObject
@property (nonatomic, readonly, strong) LineSDKJWTPayload * _Nonnull payload;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC17LineSDKJWTPayload")
@interface LineSDKJWTPayload : NSObject
- (NSString * _Nullable)getStringForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (NSNumber * _Nullable)getNumberForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nullable issuer;
@property (nonatomic, readonly, copy) NSString * _Nullable subject;
@property (nonatomic, readonly, copy) NSString * _Nullable audience;
@property (nonatomic, readonly, copy) NSDate * _Nullable expiration;
@property (nonatomic, readonly, copy) NSDate * _Nullable issueAt;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSURL * _Nullable picture;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable amr;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC22LineSDKLocationMessage")
@interface LineSDKLocationMessage : LineSDKMessage
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull address;
@property (nonatomic) double latitude;
@property (nonatomic) double longitude;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title address:(NSString * _Nonnull)address latitude:(double)latitude longitude:(double)longitude OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIButton;
@protocol LineSDKLoginButtonDelegate;
@class UIViewController;
@class LineSDKLoginManagerParameters;
enum LineSDKLoginButtonSize : NSInteger;
@class LineSDKLoginManagerOptions;

SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKLoginButton")
@interface LineSDKLoginButton : NSObject
@property (nonatomic, readonly, strong) UIButton * _Nonnull button;
@property (nonatomic, weak) id <LineSDKLoginButtonDelegate> _Nullable loginDelegate;
@property (nonatomic, weak) UIViewController * _Nullable buttonPresentingViewController;
@property (nonatomic, copy) NSSet<LineSDKLoginPermission *> * _Nonnull loginPermissions;
@property (nonatomic, strong) LineSDKLoginManagerParameters * _Nonnull loginManagerParameters;
@property (nonatomic) enum LineSDKLoginButtonSize buttonSizeValue;
@property (nonatomic, copy) NSString * _Nullable buttonTextValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)login;
/// warning:
/// Deprecated. Use <code>loginManagerParameters</code> instead.
@property (nonatomic, copy) NSArray<LineSDKLoginManagerOptions *> * _Nullable loginManagerOptions SWIFT_DEPRECATED_MSG("Use `LineSDKLoginButton.loginManagerParameters` instead.");
@end

typedef SWIFT_ENUM(NSInteger, LineSDKLoginButtonSize, open) {
  LineSDKLoginButtonSizeSmall = 0,
  LineSDKLoginButtonSizeNormal = 1,
};

@class LineSDKLoginResult;

SWIFT_PROTOCOL("_TtP11LineSDKObjC26LineSDKLoginButtonDelegate_")
@protocol LineSDKLoginButtonDelegate
- (void)loginButtonDidStartLogin:(LineSDKLoginButton * _Nonnull)button;
- (void)loginButton:(LineSDKLoginButton * _Nonnull)button didSucceedLogin:(LineSDKLoginResult * _Nullable)loginResult;
- (void)loginButton:(LineSDKLoginButton * _Nonnull)button didFailLogin:(NSError * _Nullable)error;
@end

@class LineSDKLoginProcess;
@class UIApplication;

SWIFT_CLASS("_TtC11LineSDKObjC19LineSDKLoginManager")
@interface LineSDKLoginManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManager * _Nonnull sharedManager;)
+ (LineSDKLoginManager * _Nonnull)sharedManager SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) LineSDKLoginProcess * _Nullable currentProcess;
@property (nonatomic, readonly) BOOL isSetupFinished;
@property (nonatomic, readonly) BOOL isAuthorized;
@property (nonatomic, readonly) BOOL isAuthorizing;
@property (nonatomic, copy) NSString * _Nullable preferredWebPageLanguage SWIFT_DEPRECATED_MSG("Set `preferredWebPageLanguage` in `LineSDKLoginManagerParameters` instead.");
- (void)setupWithChannelID:(NSString * _Nonnull)channelID universalLinkURL:(NSURL * _Nullable)universalLinkURL;
- (LineSDKLoginProcess * _Nullable)loginWithPermissions:(NSSet<LineSDKLoginPermission *> * _Nullable)permissions inViewController:(UIViewController * _Nullable)viewController completionHandler:(void (^ _Nonnull)(LineSDKLoginResult * _Nullable, NSError * _Nullable))completion;
- (LineSDKLoginProcess * _Nullable)loginWithPermissions:(NSSet<LineSDKLoginPermission *> * _Nullable)permissions inViewController:(UIViewController * _Nullable)viewController parameters:(LineSDKLoginManagerParameters * _Nonnull)parameters completionHandler:(void (^ _Nonnull)(LineSDKLoginResult * _Nullable, NSError * _Nullable))completion;
- (void)logoutWithCompletionHandler:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (BOOL)application:(UIApplication * _Nonnull)app open:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (LineSDKLoginProcess * _Nullable)loginWithPermissions:(NSSet<LineSDKLoginPermission *> * _Nullable)permissions inViewController:(UIViewController * _Nullable)viewController options:(NSArray<LineSDKLoginManagerOptions *> * _Nullable)options completionHandler:(void (^ _Nonnull)(LineSDKLoginResult * _Nullable, NSError * _Nullable))completion SWIFT_DEPRECATED_MSG("\n    Convert the `options` to a `LoginManager.Parameters` value and\n    use `login(permissions:inViewController:parameters:completionHandler:)` instead.\")\n    ");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC28LineSDKLoginManagerBotPrompt")
@interface LineSDKLoginManagerBotPrompt : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManagerBotPrompt * _Nonnull normal;)
+ (LineSDKLoginManagerBotPrompt * _Nonnull)normal SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManagerBotPrompt * _Nonnull aggressive;)
+ (LineSDKLoginManagerBotPrompt * _Nonnull)aggressive SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull rawValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKLoginManagerOptions") SWIFT_DEPRECATED_MSG("Use `LineSDKLoginManagerParameters` instead.")
@interface LineSDKLoginManagerOptions : NSObject
- (nonnull instancetype)initWithRawValue:(NSInteger)rawValue OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManagerOptions * _Nonnull onlyWebLogin;)
+ (LineSDKLoginManagerOptions * _Nonnull)onlyWebLogin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManagerOptions * _Nonnull botPromptNormal;)
+ (LineSDKLoginManagerOptions * _Nonnull)botPromptNormal SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginManagerOptions * _Nonnull botPromptAggressive;)
+ (LineSDKLoginManagerOptions * _Nonnull)botPromptAggressive SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC29LineSDKLoginManagerParameters")
@interface LineSDKLoginManagerParameters : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) BOOL onlyWebLogin;
@property (nonatomic, strong) LineSDKLoginManagerBotPrompt * _Nullable botPromptStyle;
@property (nonatomic, copy) NSString * _Nullable promptBotID;
@property (nonatomic, copy) NSString * _Nullable preferredWebPageLanguage;
@property (nonatomic, copy) NSString * _Nullable IDTokenNonce;
@end


SWIFT_CLASS("_TtC11LineSDKObjC22LineSDKLoginPermission")
@interface LineSDKLoginPermission : NSObject
- (nonnull instancetype)initWithRawValue:(NSString * _Nonnull)rawValue OBJC_DESIGNATED_INITIALIZER;
+ (NSSet<LineSDKLoginPermission *> * _Nonnull)permissionsFrom:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openID;)
+ (LineSDKLoginPermission * _Nonnull)openID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull profile;)
+ (LineSDKLoginPermission * _Nonnull)profile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull friends;)
+ (LineSDKLoginPermission * _Nonnull)friends SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull groups;)
+ (LineSDKLoginPermission * _Nonnull)groups SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull oneTimeShare;)
+ (LineSDKLoginPermission * _Nonnull)oneTimeShare SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull messageWrite;)
+ (LineSDKLoginPermission * _Nonnull)messageWrite SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull email;)
+ (LineSDKLoginPermission * _Nonnull)email SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull phone;)
+ (LineSDKLoginPermission * _Nonnull)phone SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull gender;)
+ (LineSDKLoginPermission * _Nonnull)gender SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull birthdate;)
+ (LineSDKLoginPermission * _Nonnull)birthdate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull address;)
+ (LineSDKLoginPermission * _Nonnull)address SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull realName;)
+ (LineSDKLoginPermission * _Nonnull)realName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatTermStatus;)
+ (LineSDKLoginPermission * _Nonnull)openChatTermStatus SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatRoomCreateAndJoin;)
+ (LineSDKLoginPermission * _Nonnull)openChatRoomCreateAndJoin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatInfo;)
+ (LineSDKLoginPermission * _Nonnull)openChatInfo SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatPlugManagement;)
+ (LineSDKLoginPermission * _Nonnull)openChatPlugManagement SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatPlugInfo;)
+ (LineSDKLoginPermission * _Nonnull)openChatPlugInfo SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatPlugProfile;)
+ (LineSDKLoginPermission * _Nonnull)openChatPlugProfile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatPlugSendMessage;)
+ (LineSDKLoginPermission * _Nonnull)openChatPlugSendMessage SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKLoginPermission * _Nonnull openChatPlugReceiveMessageEvent;)
+ (LineSDKLoginPermission * _Nonnull)openChatPlugReceiveMessageEvent SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC19LineSDKLoginProcess")
@interface LineSDKLoginProcess : NSObject
- (void)stop;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKLoginResult")
@interface LineSDKLoginResult : NSObject
@property (nonatomic, readonly, strong) LineSDKAccessToken * _Nonnull accessToken;
@property (nonatomic, readonly, copy) NSSet<LineSDKLoginPermission *> * _Nonnull permissions;
@property (nonatomic, readonly, strong) LineSDKUserProfile * _Nullable userProfile;
@property (nonatomic, readonly, strong) NSNumber * _Nullable friendshipStatusChanged;
@property (nonatomic, readonly, copy) NSString * _Nullable IDTokenNonce;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class LineSDKMessageURIAction;

SWIFT_CLASS("_TtC11LineSDKObjC20LineSDKMessageAction")
@interface LineSDKMessageAction : NSObject
@property (nonatomic, readonly, strong) LineSDKMessageURIAction * _Nullable URIAction;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LineSDKObjC20LineSDKMessageSender")
@interface LineSDKMessageSender : NSObject
@property (nonatomic, copy) NSString * _Nonnull label;
@property (nonatomic, copy) NSURL * _Nonnull iconURL;
@property (nonatomic, copy) NSURL * _Nullable linkURL;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label iconURL:(NSURL * _Nonnull)iconURL linkURL:(NSURL * _Nullable)linkURL OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC27LineSDKMessageSendingStatus")
@interface LineSDKMessageSendingStatus : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKMessageSendingStatus * _Nonnull statusOK;)
+ (LineSDKMessageSendingStatus * _Nonnull)statusOK SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LineSDKMessageSendingStatus * _Nonnull statusDiscarded;)
+ (LineSDKMessageSendingStatus * _Nonnull)statusDiscarded SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqualToStatus:(LineSDKMessageSendingStatus * _Nonnull)another SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isOK;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKMessageSendingToken")
@interface LineSDKMessageSendingToken : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull token;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LineSDKMessageShareTargetType, open) {
  LineSDKMessageShareTargetTypeFriends = 0,
  LineSDKMessageShareTargetTypeGroups = 1,
};


SWIFT_CLASS("_TtC11LineSDKObjC23LineSDKMessageURIAction")
@interface LineSDKMessageURIAction : LineSDKMessageAction
@property (nonatomic, copy) NSString * _Nullable label;
@property (nonatomic, copy) NSURL * _Nonnull uri;
- (nonnull instancetype)initWithLabel:(NSString * _Nullable)label uri:(NSURL * _Nonnull)uri OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol LineSDKOpenChatCreatingControllerDelegate;

SWIFT_CLASS("_TtC11LineSDKObjC33LineSDKOpenChatCreatingController")
@interface LineSDKOpenChatCreatingController : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) id <LineSDKOpenChatCreatingControllerDelegate> _Nullable delegate;
@property (nonatomic) NSInteger suggestedCategory;
- (void)loadAndPresentIn:(UIViewController * _Nonnull)viewController presentedHandler:(void (^ _Nonnull)(UIViewController * _Nullable, NSError * _Nullable))handler;
+ (LineSDKAuthorizationStatus * _Nonnull)localAuthorizationStatusForCreatingOpenChat SWIFT_WARN_UNUSED_RESULT;
@end

@class LineSDKOpenChatRoomInfo;
@class LineSDKOpenChatRoomCreatingItem;
@class UINavigationController;

SWIFT_PROTOCOL("_TtP11LineSDKObjC41LineSDKOpenChatCreatingControllerDelegate_")
@protocol LineSDKOpenChatCreatingControllerDelegate
@optional
- (void)openChatCreatingController:(LineSDKOpenChatCreatingController * _Nonnull)controller didCreateChatRoom:(LineSDKOpenChatRoomInfo * _Nonnull)room withCreatingItem:(LineSDKOpenChatRoomCreatingItem * _Nonnull)item;
- (void)openChatCreatingController:(LineSDKOpenChatCreatingController * _Nonnull)controller didFailWithError:(NSError * _Nonnull)error withCreatingItem:(LineSDKOpenChatRoomCreatingItem * _Nonnull)item presentingViewController:(UIViewController * _Nonnull)presentingViewController;
- (BOOL)openChatCreatingController:(LineSDKOpenChatCreatingController * _Nonnull)controller shouldPreventUserTermAlertFrom:(UIViewController * _Nonnull)presentingViewController SWIFT_WARN_UNUSED_RESULT;
- (void)openChatCreatingControllerDidCancelCreating:(LineSDKOpenChatCreatingController * _Nonnull)controller;
- (void)openChatCreatingController:(LineSDKOpenChatCreatingController * _Nonnull)controller willPresentCreatingNavigationController:(UINavigationController * _Nonnull)navigationController;
@end


SWIFT_CLASS("_TtC11LineSDKObjC31LineSDKOpenChatRoomCreatingItem")
@interface LineSDKOpenChatRoomCreatingItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull roomDescription;
@property (nonatomic, readonly, copy) NSString * _Nonnull creatorDisplayName;
@property (nonatomic, readonly) NSInteger category;
@property (nonatomic, readonly) BOOL allowSearch;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name roomDescription:(NSString * _Nonnull)roomDescription creatorDisplayName:(NSString * _Nonnull)creatorDisplayName category:(NSInteger)category allowSearch:(BOOL)allowSearch OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC23LineSDKOpenChatRoomInfo")
@interface LineSDKOpenChatRoomInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull openChatId;
@property (nonatomic, readonly, copy) NSURL * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC27LineSDKOpenChatRoomJoinType")
@interface LineSDKOpenChatRoomJoinType : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC34LineSDKOpenChatRoomMembershipState")
@interface LineSDKOpenChatRoomMembershipState : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull state;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC25LineSDKOpenChatRoomStatus")
@interface LineSDKOpenChatRoomStatus : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKPostMultisendMessagesResponseSendingResult;

SWIFT_CLASS("_TtC11LineSDKObjC36LineSDKPostMultisendMessagesResponse")
@interface LineSDKPostMultisendMessagesResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<LineSDKPostMultisendMessagesResponseSendingResult *> * _Nonnull result;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC49LineSDKPostMultisendMessagesResponseSendingResult")
@interface LineSDKPostMultisendMessagesResponseSendingResult : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull to;
@property (nonatomic, readonly, strong) LineSDKMessageSendingStatus * _Nonnull status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC31LineSDKPostSendMessagesResponse")
@interface LineSDKPostSendMessagesResponse : NSObject
@property (nonatomic, readonly, strong) LineSDKMessageSendingStatus * _Nonnull status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@protocol LineSDKShareViewControllerDelegate;

SWIFT_CLASS("_TtC11LineSDKObjC26LineSDKShareViewController")
@interface LineSDKShareViewController : NSObject
@property (nonatomic, readonly, strong) UIViewController * _Nonnull viewController;
@property (nonatomic, strong) UIColor * _Nonnull shareNavigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull shareNavigationBarTextColor;
@property (nonatomic) UIStatusBarStyle shareStatusBarStyle;
@property (nonatomic, copy) NSArray<LineSDKMessage *> * _Nullable shareMessages;
@property (nonatomic, strong) id <LineSDKShareViewControllerDelegate> _Nullable delegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (LineSDKAuthorizationStatus * _Nonnull)localAuthorizationStatusForSendingMessage SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP11LineSDKObjC34LineSDKShareViewControllerDelegate_")
@protocol LineSDKShareViewControllerDelegate
@optional
- (void)shareViewController:(LineSDKShareViewController * _Nonnull)controller didFailLoadingListType:(enum LineSDKMessageShareTargetType)shareType withError:(NSError * _Nonnull)error;
- (void)shareViewControllerDidCancelSharing:(LineSDKShareViewController * _Nonnull)controller;
- (void)shareViewController:(LineSDKShareViewController * _Nonnull)controller didFailSendingMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages toTargets:(NSArray<id <LineSDKShareTarget>> * _Nonnull)targets withError:(NSError * _Nonnull)error;
- (void)shareViewController:(LineSDKShareViewController * _Nonnull)controller didSendMessages:(NSArray<LineSDKMessage *> * _Nonnull)messages toTargets:(NSArray<id <LineSDKShareTarget>> * _Nonnull)targets;
- (NSArray<LineSDKMessage *> * _Nonnull)shareViewController:(LineSDKShareViewController * _Nonnull)controller messagesForSendingToTargets:(NSArray<id <LineSDKShareTarget>> * _Nonnull)targets SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shareViewControllerShouldDismissAfterSending:(LineSDKShareViewController * _Nonnull)controller SWIFT_WARN_UNUSED_RESULT;
@end

@class LineSDKTemplateButtonsPayload;
@class LineSDKTemplateConfirmPayload;
@class LineSDKTemplateCarouselPayload;
@class LineSDKTemplateImageCarouselPayload;

SWIFT_CLASS("_TtC11LineSDKObjC29LineSDKTemplateMessagePayload")
@interface LineSDKTemplateMessagePayload : NSObject
@property (nonatomic, readonly, strong) LineSDKTemplateButtonsPayload * _Nullable buttonsPayload;
@property (nonatomic, readonly, strong) LineSDKTemplateConfirmPayload * _Nullable confirmPayload;
@property (nonatomic, readonly, strong) LineSDKTemplateCarouselPayload * _Nullable carouselPayload;
@property (nonatomic, readonly, strong) LineSDKTemplateImageCarouselPayload * _Nullable imageCarouselPayload;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LineSDKTemplateMessagePayloadImageAspectRatio : NSInteger;
enum LineSDKTemplateMessagePayloadImageContentMode : NSInteger;

SWIFT_CLASS("_TtC11LineSDKObjC29LineSDKTemplateButtonsPayload")
@interface LineSDKTemplateButtonsPayload : LineSDKTemplateMessagePayload
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSArray<LineSDKMessageAction *> * _Nonnull actions;
@property (nonatomic, strong) LineSDKMessageAction * _Nullable defaultAction;
@property (nonatomic, copy) NSURL * _Nullable thumbnailImageURL;
@property (nonatomic) enum LineSDKTemplateMessagePayloadImageAspectRatio imageAspectRatio;
@property (nonatomic) enum LineSDKTemplateMessagePayloadImageContentMode imageContentMode;
@property (nonatomic, strong) LineSDKHexColor * _Nullable imageBackgroundColor;
@property (nonatomic, strong) LineSDKMessageSender * _Nullable sender;
- (nonnull instancetype)initWithTitle:(NSString * _Nullable)title text:(NSString * _Nonnull)text actions:(NSArray<LineSDKMessageAction *> * _Nonnull)actions OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKTemplateCarouselPayloadColumn;

SWIFT_CLASS("_TtC11LineSDKObjC30LineSDKTemplateCarouselPayload")
@interface LineSDKTemplateCarouselPayload : LineSDKTemplateMessagePayload
@property (nonatomic, copy) NSArray<LineSDKTemplateCarouselPayloadColumn *> * _Nonnull columns;
@property (nonatomic) enum LineSDKTemplateMessagePayloadImageAspectRatio imageAspectRatio;
@property (nonatomic) enum LineSDKTemplateMessagePayloadImageContentMode imageContentMode;
- (nonnull instancetype)initWithColumns:(NSArray<LineSDKTemplateCarouselPayloadColumn *> * _Nonnull)columns OBJC_DESIGNATED_INITIALIZER;
- (void)addColumn:(LineSDKTemplateCarouselPayloadColumn * _Nonnull)column;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC36LineSDKTemplateCarouselPayloadColumn")
@interface LineSDKTemplateCarouselPayloadColumn : NSObject
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSArray<LineSDKMessageAction *> * _Nonnull actions;
@property (nonatomic, strong) LineSDKMessageAction * _Nullable defaultAction;
@property (nonatomic, copy) NSURL * _Nullable thumbnailImageURL;
@property (nonatomic, strong) LineSDKHexColor * _Nullable imageBackgroundColor;
- (nonnull instancetype)initWithTitle:(NSString * _Nullable)title text:(NSString * _Nonnull)text actions:(NSArray<LineSDKMessageAction *> * _Nonnull)actions OBJC_DESIGNATED_INITIALIZER;
- (void)addAction:(LineSDKMessageAction * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC29LineSDKTemplateConfirmPayload")
@interface LineSDKTemplateConfirmPayload : LineSDKTemplateMessagePayload
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, strong) LineSDKMessageAction * _Nonnull confirmAction;
@property (nonatomic, strong) LineSDKMessageAction * _Nonnull cancelAction;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text confirmAction:(LineSDKMessageAction * _Nonnull)confirmAction cancelAction:(LineSDKMessageAction * _Nonnull)cancelAction OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LineSDKTemplateImageCarouselPayloadColumn;

SWIFT_CLASS("_TtC11LineSDKObjC35LineSDKTemplateImageCarouselPayload")
@interface LineSDKTemplateImageCarouselPayload : LineSDKTemplateMessagePayload
@property (nonatomic, copy) NSArray<LineSDKTemplateImageCarouselPayloadColumn *> * _Nonnull columns;
- (nonnull instancetype)initWithColumns:(NSArray<LineSDKTemplateImageCarouselPayloadColumn *> * _Nonnull)columns OBJC_DESIGNATED_INITIALIZER;
- (void)addColumn:(LineSDKTemplateImageCarouselPayloadColumn * _Nonnull)column;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC41LineSDKTemplateImageCarouselPayloadColumn")
@interface LineSDKTemplateImageCarouselPayloadColumn : NSObject
@property (nonatomic, copy) NSURL * _Nonnull imageURL;
@property (nonatomic, strong) LineSDKMessageAction * _Nullable action;
- (nullable instancetype)initWithImageURL:(NSURL * _Nonnull)imageURL action:(LineSDKMessageAction * _Nullable)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC22LineSDKTemplateMessage")
@interface LineSDKTemplateMessage : LineSDKMessage
@property (nonatomic, copy) NSString * _Nonnull altText;
@property (nonatomic, strong) LineSDKTemplateMessagePayload * _Nonnull payload;
- (nonnull instancetype)initWithAltText:(NSString * _Nonnull)altText payload:(LineSDKTemplateMessagePayload * _Nonnull)payload OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, LineSDKTemplateMessagePayloadImageAspectRatio, open) {
  LineSDKTemplateMessagePayloadImageAspectRatioNone = 0,
  LineSDKTemplateMessagePayloadImageAspectRatioRectangle = 1,
  LineSDKTemplateMessagePayloadImageAspectRatioSquare = 2,
};

typedef SWIFT_ENUM(NSInteger, LineSDKTemplateMessagePayloadImageContentMode, open) {
  LineSDKTemplateMessagePayloadImageContentModeNone = 0,
  LineSDKTemplateMessagePayloadImageContentModeAspectFill = 1,
  LineSDKTemplateMessagePayloadImageContentModeAspectFit = 2,
};


SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKTextMessage")
@interface LineSDKTextMessage : LineSDKMessage
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, strong) LineSDKMessageSender * _Nullable sender;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text sender:(LineSDKMessageSender * _Nullable)sender OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC11LineSDKUser")
@interface LineSDKUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull userID;
@property (nonatomic, readonly, copy) NSString * _Nonnull displayName;
@property (nonatomic, readonly, copy) NSString * _Nonnull displayNameOriginal;
@property (nonatomic, readonly, copy) NSString * _Nullable displayNameOverridden;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURL;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURLSmall;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface LineSDKUser (SWIFT_EXTENSION(LineSDKObjC)) <LineSDKShareTarget>
@property (nonatomic, readonly, copy) NSString * _Nonnull targetID;
@property (nonatomic, readonly, copy) NSURL * _Nullable avatarURL;
@end


SWIFT_CLASS("_TtC11LineSDKObjC18LineSDKUserProfile")
@interface LineSDKUserProfile : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull userID;
@property (nonatomic, readonly, copy) NSString * _Nonnull displayName;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURL;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURLLarge;
@property (nonatomic, readonly, copy) NSURL * _Nullable pictureURLSmall;
@property (nonatomic, readonly, copy) NSString * _Nullable statusMessage;
@property (nonatomic, readonly, copy) NSString * _Nullable json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LineSDKObjC19LineSDKVideoMessage")
@interface LineSDKVideoMessage : LineSDKMessage
@property (nonatomic, readonly, copy) NSURL * _Nonnull originalContentURL;
@property (nonatomic, readonly, copy) NSURL * _Nonnull previewImageURL;
- (nullable instancetype)initWithOriginalContentURL:(NSURL * _Nonnull)originalContentURL previewImageURL:(NSURL * _Nonnull)previewImageURL OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;

/// Represents a login button which executes the login function when the user taps the button.
/// note:
///
/// To change the size of the button, use the <code>buttonSize</code> property instead of setting its frame or giving
/// it some size constraints.
SWIFT_CLASS("_TtC11LineSDKObjC11LoginButton")
@interface LoginButton : UIButton
/// Creates a predefined LINE Login button.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Creates a predefined LINE Login button.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Overrides the getter of the <code>intrinsicContentSize</code> property to support automatic layout.
@property (nonatomic, readonly) CGSize intrinsicContentSize;
/// Executes the login action when the user taps the login button.
- (void)login;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface NSNotification (SWIFT_EXTENSION(LineSDKObjC))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull LineSDKOldAccessTokenKey;)
+ (NSString * _Nonnull)LineSDKOldAccessTokenKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull LineSDKNewAccessTokenKey;)
+ (NSString * _Nonnull)LineSDKNewAccessTokenKey SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSNotification (SWIFT_EXTENSION(LineSDKObjC))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull LineSDKAccessTokenDidUpdate;)
+ (NSNotificationName _Nonnull)LineSDKAccessTokenDidUpdate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull LineSDKAccessTokenDidRemove;)
+ (NSNotificationName _Nonnull)LineSDKAccessTokenDidRemove SWIFT_WARN_UNUSED_RESULT;
@end



@class NSBundle;

SWIFT_CLASS("_TtC11LineSDKObjC25StyleNavigationController")
@interface StyleNavigationController : UINavigationController
- (void)viewDidLoad;
/// :nodoc:
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LineSDKObjC36OpenChatCreatingNavigationController")
@interface OpenChatCreatingNavigationController : StyleNavigationController
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// A view controller that provides a default UI for selecting friends and groups,
/// then share some <code>Message</code>s to the selected targets.
/// <h2>Overview</h2>
/// A <code>ShareViewController</code> allows users to share a message to LINE via a default UI.
/// An authorized user can browse, search, and select up to 10 users or groups in a tab-based table view UI.
/// After choosing their share targets, the user taps “Send” to share a preset <code>Message</code> to the targets.
/// The message appears to the target recipients as having been sent by the user themselves.
/// <code>ShareViewController</code> is a subclass of <code>UINavigationController</code>, so you need to create and present it modally.
/// To use <code>ShareViewController</code>, follow these steps:
/// <ol>
///   <li>
///     Verify that the user has granted your app the necessary permissions. <code>ShareViewController</code> will show both
///     Friends and Groups tabs. To get the friend list and group list, and send a message, you need
///     <code>LoginPermission.oneTimeShare</code>. Use <code>ShareViewController.localAuthorizationStatusForSendingMessage()</code> to check
///     whether you have a valid token with the necessary permissions. If you don’t have them, don’t create and
///     show the <code>ShareViewController</code>, but instead prompt your user to grant your app the needed permissions.
///   </li>
///   <li>
///     Create a <code>ShareViewController</code> instance. <code>ShareViewController</code> can’t be initialized from Storyboard or
///     XIB. Use the provided initializer <code>init()</code>.
///   </li>
///   <li>
///     Specify <code>messages</code> to tell the <code>ShareViewController</code> the <code>Message</code> values you want to share.
///   </li>
///   <li>
///     Present the created <code>ShareViewController</code> modally by calling <code>present(_:animated:completion:)</code>.
///   </li>
/// </ol>
/// You can customize the <code>ShareViewController</code> navigation bar style and status bar content style to match your app.
/// Use <code>navigationBarTintColor</code>, <code>navigationBarTextColor</code>, and <code>statusBarStyle</code> to do so.
/// <h2>Share Delegate</h2>
/// <code>ShareViewController</code> will deliver results of user interaction to a delegate object. To get these related events,
/// you must provide a delegate that conforms to the <code>ShareViewControllerDelegate</code> protocol, and set it to <code>shareDelegate</code>
/// property.
/// See <code>ShareViewControllerDelegate</code> for more information.
/// warning:
///
/// Although <code>ShareViewController</code> is marked as <code>open</code>, we recommend against creating a subclass for it. The class is
/// intended to be used as-is, to ensure a consistent sharing experience across all LINE and LINE SDK integrations. Users
/// expect sharing messages to friends and groups in LINE to work the same across different apps. Nevertheless, if you
/// absolutely need a custom sharing interaction, you can create it using the related APIs.
SWIFT_CLASS("_TtC11LineSDKObjC19ShareViewController")
@interface ShareViewController : StyleNavigationController
/// Creates a <code>ShareViewController</code> with default behavior. Always use this initializer to create a
/// <code>ShareViewController</code> instance.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// <code>ShareViewController</code> can’t be created from Storyboard or XIB file. This method merely throws a
/// fatal error.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class UIPresentationController;

@interface ShareViewController (SWIFT_EXTENSION(LineSDKObjC)) <UIAdaptivePresentationControllerDelegate>
/// :nodoc:
- (void)presentationControllerDidDismiss:(UIPresentationController * _Nonnull)presentationController;
/// :nodoc:
- (BOOL)presentationControllerShouldDismiss:(UIPresentationController * _Nonnull)presentationController SWIFT_WARN_UNUSED_RESULT;
@end













#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
